{"version":3,"sources":["data/Mapping.js","view/ListingItems.js","view/ListingControls.js","view/Listing.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","9","ELEMENTS","FORMS","ELEMENT_BG_COLORS","ELEMENT_FG_COLORS","DEFAULT_HAVE","chara","lv","mc","dragon","c","unionIcon","union","toLocaleString","minimumIntegerDigits","useGrouping","useStyles","makeStyles","root","width","transition","cardIcon","margin","height","cardIconEditing","cardCountIcon","cardName","padding","cardNameText","fontWeight","fontSize","textTransform","letterSpacing","cardCount","marginBottom","cardCountText","cardNameNoWrap","whiteSpace","cardEdit","paddingLeft","paddingRight","visibility","cardEditEditing","position","top","left","zIndex","amuletAbIcon","mcIcon","backgroundImage","process","backgroundRepeat","backgroundSize","textAlign","lineHeight","color","textShadow","mcIconMaxed","mcIconAmulet","circleIcon","backgroundColor","borderRadius","circleIconMaxed","circleIcon0","circleIcon1","circleIcon2","circleIcon3","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","dialogIcon","abilityCheckTooltip","abilityCheck","abilityIcon","grayscale","filter","Flame","Water","Wind","Light","Shadow","Null","FgFlame","FgWater","FgWind","FgLight","FgShadow","FgNull","insertLinebreak","name","locale","replace","BaseListingItem","props","entry","have","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","classes","Grid","item","Card","className","clsx","Element","CardActionArea","onClick","onContextMenu","CardMedia","image","title","alt","CardContent","Button","size","endIcon","CardActions","CharaListingItem","id","updateHaving","deleteHaving","useState","setEditing","maxLevel","Spiral","maxManaCircle","minRarity","Rarity","rarity","setRarity","updateRarity","e","nextHave","setDefaultHave","preventDefault","Fragment","Box","TextField","label","value","onInput","level","parseInt","target","nextLevel","isNaN","bind","this","manaCircle","nextMc","standardCardIcon","category","count","DragonListingItem","cardIconFn","dh","step","nextC","mub","r","Math","max","container","justify","map","i","TextLabel","COUNT","focus","fullWeaponHave","build","WeaponBuild","Build","b","Object","keys","length","Passive","p","doneWeaponHave","fullWeapon","unbindReq","UnbindReq","floor","prereqWeaponHaves","tempHaving","prereq","prereqHaves","Create","Weapon","Prereq","FullUp","WeaponListingItem","Skins","React","open","setOpen","handleClose","createThisHaving","newHave","prereqs","deleteThisHaving","setBuildValues","piece","min","reduce","acc","cur","idx","makeBuildChange","setAbilityValues","checked","handleAbilityCheck","split","slice","levelData","Level","Mats","WeaponLevel","doneHave","bi","Dialog","onClose","aria-labelledby","DialogTitle","FormControlLabel","control","Checkbox","icon","src","checkedIcon","Typography","variant","display","WeaponSeries","Series","DialogContent","dividers","buildInfo","buildpiece","buildvalue","key","gutterBottom","Slider","valueLabelDisplay","onChange","marks","colorPrimary","passive","abilityName","Ability","iconPath","Icon","Tooltip","aria-label","placement","popper","MaterialSummaryItem","m","align","fortMaxNum","NameEN","endsWith","FortListingItem","maxHave","values","Detail","maxLv","maxNum","makeLevelChange","Array","fill","fullWidth","_","currentLevel","doneAmuletHave","fullCopies","AmuletBuild","fullAmuletHave","AmuletListingItem","NoRefine","BaseId","AmuletLevel","AbIcon","Union","marginTop","sortSelect","radioGroup","marginLeft","radioTitle","radioRoot","radioIcon","unchecked","opacity","availButton","maxWidth","availChecks","paddingTop","costTitle","minHeight","fullToggle","float","WeaponMaterialSummation","having","visible","fullAgito","setFullAgito","isFullAgito","toggleOpen","event","type","totalCost","totalMats","currHave","bs","Cost","currLevelMats","doneLevelMats","diff","sorted","sort","a","Material","SortId","MATS","anchor","style","verticalAlign","spacing","alignItems","wrap","FortMaterialSummation","totalTime","Fort","currIter","curLv","detail","Time","AmuletMaterialSummation","setFullCopies","isFullCopies","Amulet","entryMats","tm","UniqueMaterial","ListingControls","maxRarity","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","series","storeKey","handleBoolCheckFilters","radioFilterValues","res","offset","handleRadioFilter","anchorEl","setAnchorEl","handleClick","currentTarget","Boolean","handleAvail","nextAvail","Availability","push","index","indexOf","splice","handleSeries","nextSeries","AppBar","FormControl","InputLabel","SORT_BY","Select","select","so","MenuItem","toUpperCase","IconButton","ifHave","HAVE","ifNotHave","NOT_HAVE","ifMaxed","MAXED","ifNotMaxLevel","NOT_MAXED","rf","component","FormLabel","disabled","RadioGroup","toString","row","v","Radio","AVAILABILITY","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","includes","SERIES","sr","weaponSeriesSortOrder","SortMethods","byID","entries","byNameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","byWeapon","byRarity","bySeries","byType","Type","byForm","Form","CheckFilterMethods","undefined","loadLocalObj","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","sortDefault","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","setHaving","changes","newHaving","storeFilterKey","setFilters","visibleEntries","sortedId","reverse","f","every","visibleHave","nextOrder","filterType","newFilters","total","halidom","statLabel","COMPLETION","theme","createMuiTheme","typography","fontFamily","TabPanel","other","role","hidden","a11yProps","App","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","Tabs","newIdx","indicatorColor","textColor","scrollButtons","Tab","ADVENTURERS","DRAGONS","AMULETS","FACILITY","dir","Chara","Availabilities","Dragon","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b958bed1.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff',\r\n    9: 'Gun'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const FORMS = {\r\n    0: 'Form0',\r\n    2: 'FormB',\r\n    1: 'FormA',\r\n    3: 'FormC',\r\n}\r\n\r\nexport const ELEMENT_BG_COLORS = {\r\n    Null: 'rgb(192, 192,192)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const ELEMENT_FG_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(204, 0, 0)',\r\n    Water: 'rgb(0, 51, 204)',\r\n    Wind: 'rgb(0, 153, 0)',\r\n    Light: 'rgb(255,180,0)',\r\n    Shadow: 'rgb(102, 0, 204)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    }\r\n}\r\n\r\nexport const unionIcon = (union) => (`Icon_Union_${union.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}`);","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponSeries from '../data/weaponseries.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json'\r\n\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport { ELEMENTS, ELEMENT_BG_COLORS, ELEMENT_FG_COLORS, DEFAULT_HAVE, unionIcon } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardCountIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 90,\r\n        width: 90\r\n    },\r\n    cardName: {\r\n        padding: '0 !important',\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardCount: {\r\n        padding: '0 !important',\r\n        height: '1em',\r\n        marginBottom: 8,\r\n    },\r\n    cardCountText: {\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        letterSpacing: -1,\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    unionIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 48,\r\n        zIndex: 1\r\n    },\r\n    amuletAbIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 6,\r\n        left: 28,\r\n        zIndex: 2\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 3,\r\n        zIndex: 2\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    mcIconAmulet: {\r\n        top: 25,\r\n    },\r\n    circleIcon: {\r\n        backgroundColor: 'gray',\r\n        textAlign: 'center',\r\n        width: 19,\r\n        height: 19,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        borderRadius: 50,\r\n        top: 5,\r\n    },\r\n    circleIconMaxed: {\r\n        color: '#48D1CC'\r\n    },\r\n    circleIcon0: {\r\n        left: 4\r\n    },\r\n    circleIcon1: {\r\n        left: 25,\r\n    },\r\n    circleIcon2: {\r\n        left: 46,\r\n    },\r\n    circleIcon3: {\r\n        left: 67,\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n    dialogIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    abilityCheckTooltip: {\r\n        top: '10px !important',\r\n        padding: 0,\r\n        fontSize: '1.2em'\r\n    },\r\n    abilityCheck: {\r\n        padding: 0\r\n    },\r\n    abilityIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    grayscale: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    Flame: { backgroundColor: ELEMENT_BG_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_BG_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_BG_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_BG_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_BG_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_BG_COLORS.Null },\r\n    FgFlame: { color: ELEMENT_FG_COLORS.Flame },\r\n    FgWater: { color: ELEMENT_FG_COLORS.Water },\r\n    FgWind: { color: ELEMENT_FG_COLORS.Wind },\r\n    FgLight: { color: ELEMENT_FG_COLORS.Light },\r\n    FgShadow: { color: ELEMENT_FG_COLORS.Shadow },\r\n    FgNull: { color: ELEMENT_FG_COLORS.Null },\r\n});\r\n\r\nexport const insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const maxLevel = entry.Spiral ? 100 : 80;\r\n    const lv = have ? have.lv : '';\r\n    const validateLv = (e) => {\r\n        const level = parseInt(e.target.value);\r\n        let nextLevel = level;\r\n        if (isNaN(level) || level < 1) { nextLevel = ''; }\r\n        else if (level > maxLevel) { nextLevel = maxLevel; }\r\n        if (nextLevel) {\r\n            if (have) { updateHaving(id, { lv: nextLevel }); }\r\n            else { updateHaving(id, { lv: nextLevel, mc: 1 }); }\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const maxManaCircle = entry.Spiral ? 70 : 50;\r\n    const mc = have ? have.mc : '';\r\n    const validateMc = (e) => {\r\n        const manaCircle = parseInt(e.target.value);\r\n        let nextMc = manaCircle;\r\n        if (isNaN(manaCircle) || manaCircle < 1) { nextMc = ''; }\r\n        else if (manaCircle > maxManaCircle) { nextMc = maxManaCircle; }\r\n        if (nextMc) {\r\n            if (have) { updateHaving(id, { mc: nextMc }); }\r\n            else { updateHaving(id, { lv: 1, mc: nextMc }); }\r\n            updateHaving(id, { mc: nextMc });\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const minRarity = entry.Rarity;\r\n    const [rarity, setRarity] = useState(entry.Rarity);\r\n    const updateRarity = () => {\r\n        if (minRarity === 5) { return; }\r\n        if (minRarity < 5 && (lv > 70 || mc > 40)) { setRarity(5); return; }\r\n        if (minRarity < 4 && (lv > 60 || mc > 30)) { setRarity(4); return; }\r\n        setRarity(minRarity);\r\n    }\r\n\r\n    const setMaxHave = () => {\r\n        setRarity(5);\r\n        const nextHave = { lv: maxLevel, mc: maxManaCircle };\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const setDefaultHave = () => {\r\n        setRarity(minRarity);\r\n        const nextHave = DEFAULT_HAVE.chara[minRarity];\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        if (!have || (have.lv === maxLevel && have.mc === maxManaCircle)) { setDefaultHave(); }\r\n        else { setMaxHave(); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) { setRarity(minRarity); deleteHaving(id); }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => (\r\n        <React.Fragment>\r\n            {(!editing && have ? (have.mc > 0) : false) &&\r\n                <Box className={clsx(classes.mcIcon, have.mc === maxManaCircle && classes.mcIconMaxed)}>{mc}</Box>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={`${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField label=\"Lv\" value={lv} onInput={validateLv.bind(this)} />\r\n        <TextField label=\"MC\" value={mc} onInput={validateMc.bind(this)} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function DragonListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nconst fullWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    if (entry.Passive) {\r\n        have.p = {};\r\n        for (let i of Object.keys(entry.Passive)) {\r\n            have.p[i] = true;\r\n        }\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneWeaponHave = (entry, fullWeapon) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    if (build[5]) {\r\n        const unbindReq = Math.max(build[5].map((b) => b.UnbindReq));\r\n        const have = {\r\n            b: {\r\n                1: unbindReq,\r\n                5: build[5].length,\r\n                6: 1\r\n            }\r\n        }\r\n        if (build[2]) {\r\n            have.b[2] = Math.floor(Math.max(0, unbindReq - 1) / 4);\r\n        }\r\n        if (fullWeapon) {\r\n            have.b[1] = build[1].length;\r\n            have.b[2] = build[2].length;\r\n            have.b[3] = build[3].length;\r\n        }\r\n        return have;\r\n    } else if (!build[6]) {\r\n        // special case for agito\r\n        return fullWeaponHave(entry);\r\n    } else {\r\n        return { b: { 6: 1 } };\r\n    }\r\n}\r\n\r\nconst prereqWeaponHaves = (tempHaving, prereq, prereqHaves) => {\r\n    prereqHaves = prereqHaves || {};\r\n    for (let i of prereq.Create) {\r\n        if (!tempHaving[i]) {\r\n            prereqHaves[i] = { b: { 6: 1 } };\r\n        }\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[i].Prereq, prereqHaves);\r\n    }\r\n    if (prereq.FullUp) {\r\n        prereqHaves[prereq.FullUp] = fullWeaponHave(Weapon[prereq.FullUp]);\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[prereq.FullUp].Prereq, prereqHaves);\r\n    }\r\n    return prereqHaves;\r\n}\r\n\r\nexport function WeaponListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have && have.b[2] && have.b[2] === 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"1\"]}.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"0\"]}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = WeaponBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        // let tempHaving = updateHaving(id, newHave || doneWeaponHave(entry));\r\n        let tempHaving = updateHaving(id, newHave || { b: { 6: 1 } });\r\n        const prereqs = prereqWeaponHaves(tempHaving, entry.Prereq);\r\n        for (let i of Object.keys(prereqs)) {\r\n            tempHaving = updateHaving(i, prereqs[i], tempHaving);\r\n        }\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneWeaponHave(entry, have.b[1] === 5);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            if (have.p) {\r\n                doneHave.p = have.p;\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            let tempHaving = deleteHaving(id);\r\n            for (let i of Object.keys(tempHaving)) {\r\n                const prereqs = prereqWeaponHaves({}, Weapon[i].Prereq);\r\n                if (prereqs[id]) {\r\n                    tempHaving = deleteHaving(i, tempHaving);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        if (piece === '1' && build[5]) {\r\n            have.b[5] = Math.min(have.b[5] || 0, build[5].reduce((acc, cur, idx) => {\r\n                return cur.UnbindReq > value ? acc : (idx + 1);\r\n            }, 0));\r\n        } else if (piece === '2') {\r\n            have.b[1] = Math.min(have.b[1] || 0, (value + 1) * 4);\r\n        } else {\r\n            const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n            have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        }\r\n        if (build[2] && piece !== '2') {\r\n            have.b[2] = Math.max(have.b[2] || 0, Math.floor(Math.max(have.b[1] - 1) / 4));\r\n        }\r\n        if (have.p) {\r\n            for (let p of Object.keys(have.p)) {\r\n                if (entry.Passive[p].UnbindReq > have.b[1]) {\r\n                    have.p[p] = false;\r\n                }\r\n            }\r\n        }\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n    const setAbilityValues = (p, checked, have) => {\r\n        if (!have.p) {\r\n            have.p = {}\r\n        }\r\n        have.p[p] = checked;\r\n        if (checked) {\r\n            have.b[1] = Math.max(have.b[1] || 0, entry.Passive[p].UnbindReq);\r\n        }\r\n        return have;\r\n    }\r\n    const handleAbilityCheck = (e) => {\r\n        const p = e.target.name.split('-').slice(-1);\r\n        const checked = e.target.checked;\r\n        if (have) {\r\n            updateHaving(id, setAbilityValues(p, checked, have));\r\n        } else {\r\n            const newHave = { b: { 6: 1 } };\r\n            createThisHaving(setAbilityValues(p, checked, newHave));\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = WeaponLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (<Box className={clsx(classes.mcIcon, have.b[5] && classes.mcIconMaxed)}>\r\n                        {levelData.Level}\r\n                    </Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography variant=\"overline\" display=\"block\">{WeaponSeries[entry.Series][`Name${locale}`]}</Typography><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes[`Fg${ELEMENTS[entry.Element]}`] || classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n            {entry.Passive && (< DialogContent dividers>\r\n                {Object.keys(entry.Passive).map((p) => {\r\n                    const passive = entry.Passive[p];\r\n                    const abilityName = passive.Ability[`Name${locale}`];\r\n                    const iconPath = `${process.env.PUBLIC_URL}/ability/${passive.Ability.Icon}.png`;\r\n                    return (\r\n                        <Tooltip key={p} title={abilityName} aria-label={abilityName} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                            <Checkbox\r\n                                name={`${id}-passive-${p}`}\r\n                                onClick={handleAbilityCheck}\r\n                                color=\"default\"\r\n                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                checked={!!(have && have.p && have.p[p])}\r\n                                icon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                checkedIcon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon)} />}\r\n                            />\r\n                        </Tooltip>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function MaterialSummaryItem(props) {\r\n    const { m, count, name } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item>\r\n            <Card>\r\n                <CardMedia\r\n                    className={clsx(classes.cardCountIcon)}\r\n                    image={`${process.env.PUBLIC_URL}/material/${m}.png`}\r\n                    title={name} alt={name} >\r\n                </CardMedia>\r\n                <CardContent className={clsx(classes.cardCount)}>\r\n                    <Typography align=\"center\" className={clsx(classes.cardCountText)} display=\"block\">x {count}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const fortMaxNum = (entry) => {\r\n    if (entry.NameEN === 'Rupie Mine') {\r\n        return 4;\r\n    }\r\n    if (entry.NameEN.endsWith('Altar') || entry.NameEN.endsWith('Dojo')) {\r\n        return 2;\r\n    }\r\n    return 1\r\n}\r\n\r\nexport function FortListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have) {\r\n        const maxHave = Math.max(...Object.values(have));\r\n        if (maxHave <= 0) {\r\n            deleteHaving(id);\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n        } else {\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[maxHave - 1].Icon}.png`;\r\n        }\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const maxLv = entry.Detail.length;\r\n    const maxNum = fortMaxNum(entry);\r\n\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, (new Array(maxNum)).fill(maxLv));\r\n        } else {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteHaving(id);\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        } else {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const makeLevelChange = (idx) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                have[idx] = value;\r\n                updateHaving(id, have);\r\n            } else {\r\n                const newHave = (new Array(maxNum)).fill(0);\r\n                newHave[idx] = value;\r\n                updateHaving(id, newHave);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (Object.keys(have).map((key) => (<Box className={clsx(classes.circleIcon, classes[`circleIcon${key}`], (have[key] >= maxLv) && classes.circleIconMaxed)}>{have[key]}</Box>)))}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open} fullWidth={'md'}\r\n        >\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {Array(maxNum).fill(0).map((_, idx) => {\r\n                    const currentLevel = have ? have[idx] : 0;\r\n                    return (\r\n                        <Box key={idx}>\r\n                            <Typography id=\"level-slider\" gutterBottom>\r\n                                {`${cardName} ${(idx + 1)} - Lv.${currentLevel}`}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-level-${idx + 1}`}\r\n                                aria-labelledby=\"level-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={currentLevel}\r\n                                onChange={makeLevelChange(idx)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={maxLv}\r\n                                classes={classes.FgNull}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nconst fullAmuletHave = (entry) => {\r\n    const build = AmuletBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneAmuletHave = (entry, fullCopies) => {\r\n    const doneHave = fullAmuletHave(entry);\r\n    if (!fullCopies) {\r\n        doneHave.b[6] = 1;\r\n    }\r\n    return doneHave;\r\n}\r\n\r\nexport function AmuletListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if ((!entry.NoRefine) && have && have.b[1] && have.b[1] >= 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_02.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_01.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = AmuletBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        updateHaving(id, newHave || { b: { 6: 1 } });\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneAmuletHave(entry, have.b[6] < (build[6].length+1));\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        // const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n        // have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = AmuletLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (\r\n                        <Box className={clsx(classes.mcIconAmulet, classes.mcIcon, have.b[1] === 4 && have.b[6] === 4 && classes.mcIconMaxed)}>\r\n                        {levelData.Level}</Box>\r\n                    )}\r\n                    <Box className={clsx(classes.amuletAbIcon)}><img alt={entry.AbIcon} src={`${process.env.PUBLIC_URL}/ability/${entry.AbIcon}.png`}/></Box>\r\n                    {entry.Union && (<Box className={clsx(classes.unionIcon)}><img alt={`Union_${entry.Union}`} src={`${process.env.PUBLIC_URL}/ui/${unionIcon(entry.Union)}.png`}/></Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json';\r\n\r\nimport Amulet from '../data/amulet.json';\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport Fort from '../data/fort.json';\r\nimport Material from '../data/material.json';\r\n\r\nimport { ELEMENTS, WEAPONS, FORMS, unionIcon } from '../data/Mapping';\r\nimport { doneWeaponHave, doneAmuletHave, MaterialSummaryItem, fortMaxNum } from './ListingItems';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    costTitle: {\r\n        minHeight: '2.5em'\r\n    },\r\n    fullToggle: {\r\n        float: \"right\",\r\n        position: \"relative\",\r\n        top: -4\r\n    }\r\n});\r\n\r\n\r\nfunction WeaponMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullAgito, setFullAgito] = React.useState(\"Agito Weapons Maxed\");\r\n    const isFullAgito = fullAgito === \"Agito Weapons Maxed\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullAgito = (event) => {\r\n        if (isFullAgito) {\r\n            setFullAgito(\"Agito Weapon Bonus Only\");\r\n        } else {\r\n            setFullAgito(\"Agito Weapons Maxed\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Weapon[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneWeaponHave(entry, entry.Series === 4 && isFullAgito);\r\n        const build = WeaponBuild[entry.Build];\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6' || doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = WeaponLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0){\r\n                        totalMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    totalMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let m of Object.keys(entry.Mats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += entry.Mats[m];\r\n            }\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6') { continue; }\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] = doneLevelMats[m];\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img style={{ verticalAlign: 'middle', width: 30 }} src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullAgito}\r\n                        name=\"fullAgito\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.fullToggle)}\r\n                    >{fullAgito}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction FortMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    let totalTime = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Fort[id];\r\n        const currHave = having[id];\r\n        let currIter = null;\r\n        if (currHave) {\r\n            currIter = Object.values(currHave);\r\n        } else {\r\n            currIter = Array(fortMaxNum(entry)).fill(0);\r\n        }\r\n        for (const curLv of currIter) {\r\n            for (const detail of entry.Detail.slice(curLv)) {\r\n                totalCost += detail.Cost;\r\n                totalTime += detail.Time;\r\n                for (let m of Object.keys(detail.Mats)) {\r\n                    if (!totalMats[m]) { totalMats[m] = 0; }\r\n                    totalMats[m] += detail.Mats[m];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img style={{ verticalAlign: 'middle', width: 30 }} src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom> {totalCost.toLocaleString()}</Typography>\r\n                    <QueryBuilderIcon style={{ verticalAlign: 'middle', marginLeft: 4 }} />\r\n                    <Typography display=\"inline\" gutterBottom> {totalTime.toLocaleString()}s</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction AmuletMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullCopies, setFullCopies] = React.useState(\"4 Copies\");\r\n    const isFullCopies = fullCopies === \"4 Copies\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullCopies = (event) => {\r\n        if (isFullCopies) {\r\n            setFullCopies(\"1 Copy\");\r\n        } else {\r\n            setFullCopies(\"4 Copies\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Amulet[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneAmuletHave(entry, isFullCopies);\r\n        const build = AmuletBuild[entry.Build];\r\n        const entryMats = {};\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = AmuletLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0){\r\n                        entryMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    entryMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!entryMats[m]) { entryMats[m] = 0; }\r\n                entryMats[m] += doneLevelMats[m];\r\n            }\r\n        }\r\n        for (let m of Object.keys(entryMats)){\r\n            const tm = (m === \"UNIQUE\") ? entry.UniqueMaterial : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img style={{ verticalAlign: 'middle', width: 30 }} src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullCopies}\r\n                        name=\"fullCopies\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.fullToggle)}\r\n                    >{fullCopies}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities, series,\r\n        storeKey, having, visible\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        \"Form\": FORMS,\r\n        \"Union\": [...Array(12).keys()].reduce((res, union) => {\r\n            res[union] = unionIcon(union);\r\n            return res;\r\n        }, {}),\r\n    }\r\n    if (minRarity && maxRarity) {\r\n        radioFilterValues[\"Rarity\"] = [...Array((maxRarity+1)-minRarity).keys()].reduce((res, offset) => {\r\n            const rarity = minRarity+offset;\r\n            res[rarity] = `${rarity}_Star`;\r\n            return res;\r\n        }, {0: '0_Star'})\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n    const handleSeries = (e) => {\r\n        let nextSeries = filters.Series || [];\r\n        if (e.target.checked) { nextSeries.push(e.target.name); }\r\n        else {\r\n            const index = nextSeries.indexOf(e.target.name);\r\n            if (index >= 0) { nextSeries.splice(index, 1); }\r\n        }\r\n        if (nextSeries.length === 0) { removeFilter('Series'); }\r\n        else { addFilter('Series', nextSeries); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n    const clearSeries = (e) => { removeFilter('Series'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                {(storeKey === 'chara' || storeKey === 'dragon') && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifMaxed} name=\"ifMaxed\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].MAXED} />\r\n                </Grid>}\r\n                {(storeKey === 'fort') && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotMaxLevel} name=\"ifNotMaxLevel\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].NOT_MAXED} />\r\n                </Grid>}\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                {availabilities && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearAvail}>Clear</Button>\r\n                                {availabilities.map((av) => (\r\n                                    <FormControlLabel key={av}\r\n                                        control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                        label={TextLabel[locale][av] || av} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {series && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].SERIES}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearSeries}>Clear</Button>\r\n                                {Object.keys(series).map((sr) => (\r\n                                    <FormControlLabel key={sr}\r\n                                        control={<Checkbox onChange={handleSeries.bind(this)} name={sr} checked={Boolean(filters.Series && filters.Series.includes(sr))} color=\"primary\" />}\r\n                                        label={series[sr][`Name${locale}`]} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {(storeKey === 'amulet') && (<AmuletMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'weapon') && (<WeaponMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'fort') && (<FortMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\nimport { doneWeaponHave, doneAmuletHave, fortMaxNum } from './ListingItems';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\n\r\nconst weaponSeriesSortOrder = {\r\n    4: -6,\r\n    3: -5,\r\n    5: -4,\r\n    2: -3,\r\n    1: -2,\r\n    6: -1,\r\n}\r\n\r\nconst SortMethods = {\r\n    byID: (entries) => (Object.keys(entries)),\r\n    byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n    byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n    byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n    byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n    byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n    byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    bySeries: (entries) => Object.keys(entries).sort((a, b) => (weaponSeriesSortOrder[entries[a].Series] - weaponSeriesSortOrder[entries[b].Series] || entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    byType: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Type - entries[b].Type || a - b)),\r\n    byForm: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Form - entries[b].Form || entries[a].Rarity - entries[b].Rarity || a - b)),\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifMaxed: (entry, have) => {\r\n        if (have) {\r\n            if (entry.Series !== undefined) {\r\n                const doneHave = doneWeaponHave(entry);\r\n                return Object.keys(doneHave).reduce((acc, cur) => {\r\n                    if (!acc) { return false; }\r\n                    if (!have[cur]) { return false; }\r\n                    return have[cur] >= doneHave[cur];\r\n                })\r\n            } else if (entry.Spiral === undefined) { return have.c >= 5; }\r\n            else { return entry.Spiral ? (have.lv === 100 && have.mc === 70) : have.lv === 80 && have.mc === 50; }\r\n        }\r\n        return false;\r\n    },\r\n    ifNotMaxLevel: (entry, have) => {\r\n        if (have) {\r\n            return entry.Detail.length > Math.min(...Object.values(have));\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const {\r\n        locale, entries, availabilities, series,\r\n        storeKey, cardIconFn, minRarity, maxRarity,\r\n        sortDefault, sortOptions, radioFilters, ItemComponent\r\n    } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        let sortedId = null;\r\n        if (sort === 'byName') {\r\n            sortedId = SortMethods[`byName${locale}`](entries);\r\n        } else {\r\n            sortedId = SortMethods[sort](entries);\r\n        }\r\n        if (order === 'DSC') {\r\n            sortedId = sortedId.reverse();\r\n        }\r\n        return sortedId;\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes, tempHaving) => {\r\n        const newHaving = {\r\n            ...(tempHaving || having),\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n    const deleteHaving = (id, tempHaving) => {\r\n        const newHaving = { ...(tempHaving || having) };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability' || filterType === 'Series') {\r\n            newFilters[filterType] = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            } else if (f === 'Series' && (!filters.Series.includes(entry.Series.toString()))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                if (storeKey === 'weapon') {\r\n                    newHaving[id] = doneWeaponHave(entries[id]);\r\n                } else if (storeKey === 'amulet'){\r\n                    newHaving[id] = doneAmuletHave(entries[id]);\r\n                } else if (storeKey === 'fort') {\r\n                    newHaving[id] = (new Array(fortMaxNum(entries[id]))).fill(entries[id].Detail.length);\r\n                } else {\r\n                    newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n                }\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        let count = visibleHave;\r\n        let total = visibleEntries.length;\r\n        if (storeKey === 'weapon') {\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? (having[id].b[5] ? 1 : 0) : 0)), 0);\r\n            total = visibleEntries.reduce((res, id) => (res + (WeaponBuild[entries[id].Build][5] ? 1 : 0)), 0);\r\n        } else if (storeKey === 'fort') {\r\n            const halidom = having[100101] ? having[100101][0] : 0;\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? Object.values(having[id]).reduce((a, b) => a + b, 0) : 0)), 0) - halidom;\r\n            total = visibleEntries.reduce((res, id) => (res + (fortMaxNum(entries[id]) * entries[id].Detail.length)), 0) - 10;\r\n        }\r\n        const p = ((100 * count / total) >> 0)\r\n        return `${title}: ${count} / ${total} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n                series={series}\r\n                storeKey={storeKey}\r\n                having={having}\r\n                visible={visibleEntries}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, DragonListingItem, WeaponListingItem, FortListingItem, AmuletListingItem, } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\nimport WeaponSeries from './data/weaponseries.json';\r\nimport Fort from './data/fort.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(3)} />\r\n            <Tab label={TextLabel[locale].FACILITY} {...a11yProps(4)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={DragonListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          // cardIconFn={amuletCardIcon}\r\n          minRarity={1}\r\n          maxRarity={3}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Form', 'Union']}\r\n          ItemComponent={AmuletListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          series={WeaponSeries}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'bySeries']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={WeaponListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={4} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Fort}\r\n          storeKey={'fort'}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byType']}\r\n          radioFilters={[]}\r\n          ItemComponent={FortListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}