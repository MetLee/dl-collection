{"version":3,"sources":["data/Mapping.js","view/ListingControls.js","view/Listing.js","view/ListingItems.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","ELEMENTS","ELEMENT_COLORS","RARITIES","DEFAULT_HAVE","chara","lv","mc","hp","atk","dragon","c","amulet","weapon","useStyles","makeStyles","root","marginTop","marginBottom","padding","sortSelect","width","radioGroup","display","marginLeft","radioTitle","fontSize","textTransform","radioRoot","margin","radioIcon","height","unchecked","opacity","availButton","maxWidth","availChecks","paddingTop","paddingLeft","paddingRight","ListingControls","props","locale","minRarity","maxRarity","sort","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","classes","handleBoolCheckFilters","e","target","checked","name","radioFilterValues","Object","keys","filter","r","reduce","res","key","handleRadioFilter","value","React","useState","anchorEl","setAnchorEl","open","Boolean","handleAvail","nextAvail","Availability","push","index","indexOf","console","log","splice","length","AppBar","position","color","className","Grid","container","spacing","alignItems","justify","wrap","item","sm","Checkbox","onChange","icon","checkedIcon","FormControl","InputLabel","TextLabel","SORT_BY","Select","select","map","so","MenuItem","slice","toUpperCase","IconButton","onClick","size","FormControlLabel","control","ifHave","bind","this","label","HAVE","ifNotHave","NOT_HAVE","ifMaxed","MAXED","rf","component","FormLabel","disabled","RadioGroup","aria-label","toString","row","v","Radio","alt","clsx","src","process","xs","Button","event","currentTarget","variant","AVAILABILITY","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","includes","SortMethods","ASC","byID","entries","byNameEN","a","b","NameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","Element","Weapon","Rarity","byWeapon","byRarity","DSC","reverse","CheckFilterMethods","entry","have","undefined","Spiral","loadLocalObj","storeKey","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","cardIconFn","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","having","setHaving","updateHaving","id","changes","newHaving","deleteHaving","storeFilterKey","setFilters","visibleEntries","sorted","f","every","nextOrder","filterType","newFilters","parseInt","style","category","transition","cardIcon","cardIconEditing","cardName","cardNameText","fontWeight","letterSpacing","cardNameNoWrap","whiteSpace","cardEdit","visibility","cardEditEditing","mcIcon","backgroundImage","backgroundRepeat","backgroundSize","textAlign","lineHeight","textShadow","top","left","mcIconMaxed","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","Flame","backgroundColor","Water","Wind","Light","Shadow","Null","BaseListingItem","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","CardEditFields","Card","CardActionArea","onContextMenu","CardMedia","image","title","CardContent","endIcon","replace","insertLinebreak","CardActions","CharaListingItem","setEditing","maxLevel","validateLv","level","nextLevel","isNaN","updateRarity","maxManaCircle","validateMc","manaCircle","nextMc","rarity","setRarity","nextHave","setDefaultHave","preventDefault","Fragment","Box","TextField","onInput","standardCardIcon","count","amuletCardIcon","UnbindableListingItem","validateCount","nextC","dh","step","mub","Math","max","i","theme","createMuiTheme","typography","fontFamily","TabPanel","children","other","Typography","role","hidden","aria-labelledby","p","a11yProps","App","idx","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","Tabs","newIdx","indicatorColor","textColor","scrollButtons","Tab","ADVENTURERS","DRAGONS","AMULETS","dir","Chara","Availabilities","Dragon","Amulet","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2fde6e13.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const ELEMENT_COLORS = {\r\n    Null: 'rgb(217, 217, 217)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)',\r\n}\r\n\r\nexport const RARITIES = {\r\n    0: '0_Star',\r\n    1: '1_Star',\r\n    2: '2_Star',\r\n    3: '3_Star',\r\n    4: '4_Star',\r\n    5: '5_Star',\r\n    6: '6_Star'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40, hp: 0, atk: 0 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 },\r\n    },\r\n    amulet: {\r\n        2: { c: 5 },\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 5 },\r\n    },\r\n    weapon: {\r\n        2: { c: 5 },\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 5 },\r\n        6: { c: 5 },\r\n    }\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport { ELEMENTS, WEAPONS, RARITIES } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    }\r\n});\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        // eslint-disable-next-line\r\n        'Rarity': Object.keys(RARITIES).filter(r => (r == 0 || (r >= minRarity && r <= maxRarity))).reduce((res, key) => { res[key] = RARITIES[key]; return res; }, {})\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            console.log(index);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item sm={2}>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifMaxed} name=\"ifMaxed\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].MAXED} />\r\n                </Grid>\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                <Grid item xs>\r\n                    <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                    <Popover\r\n                        open={open}\r\n                        anchorEl={anchorEl}\r\n                        onClose={handleClose}\r\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                        transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                        <FormGroup className={classes.availChecks}>\r\n                            <Button onClick={clearAvail}>Clear</Button>\r\n                            {availabilities.map((av) => (\r\n                                <FormControlLabel key={av}\r\n                                    control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                    label={av} />\r\n                            ))}\r\n                        </FormGroup>\r\n                    </Popover>\r\n                </Grid>\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport ListingControls from './ListingControls';\r\n\r\nconst SortMethods = {\r\n    ASC: {\r\n        byID: (entries) => (Object.keys(entries)),\r\n        byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n        byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n        byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n        byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n        byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n        byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    },\r\n    DSC: {\r\n        byID: (entries) => (Object.keys(entries).reverse()),\r\n        byNameEN: (entries) => Object.keys(entries).sort((b, a) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n        byNameJP: (entries) => Object.keys(entries).sort((b, a) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n        byNameCN: (entries) => Object.keys(entries).sort((b, a) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n        byElement: (entries) => Object.keys(entries).sort((b, a) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n        byWeapon: (entries) => Object.keys(entries).sort((b, a) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n        byRarity: (entries) => Object.keys(entries).sort((b, a) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    }\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifMaxed: (entry, have) => {\r\n        if (have) {\r\n            if (entry.Spiral === undefined) { return have.c >= 5; }\r\n            else { return entry.Spiral ? (have.lv === 100 && have.mc === 70) : have.lv === 80 && have.mc === 50; }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const { locale, entries, availabilities, storeKey, cardIconFn, minRarity, maxRarity, sortOptions, radioFilters, ItemComponent } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || 'byID');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        switch (sort) {\r\n            case 'byName':\r\n                return SortMethods[order][`byName${locale}`](entries);\r\n            default:\r\n                return SortMethods[order][sort](entries);\r\n        }\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes) => {\r\n        const newHaving = {\r\n            ...having,\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n    const deleteHaving = (id) => {\r\n        const newHaving = { ...having };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability') {\r\n            newFilters.Availability = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0) > (visibleEntries.length / 2 >> 0)\r\n    const toggleAllHaving = () => {\r\n        let newHaving = {};\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                newHaving[id] = DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n            />\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" style={{ marginTop: 10 }}>\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { ELEMENTS, ELEMENT_COLORS, DEFAULT_HAVE } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardName: {\r\n        padding: 0,\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 4\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n\r\n    Flame: { backgroundColor: ELEMENT_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_COLORS.Null }\r\n});\r\n\r\nconst insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, CardEditFields } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    <CardEditFields />\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const maxLevel = entry.Spiral ? 100 : 80;\r\n    const lv = have ? have.lv : '';\r\n    const validateLv = (e) => {\r\n        const level = parseInt(e.target.value);\r\n        let nextLevel = level;\r\n        if (isNaN(level) || level < 1) { nextLevel = ''; }\r\n        else if (level > maxLevel) { nextLevel = maxLevel; }\r\n        if (nextLevel) {\r\n            if (have) { updateHaving(id, { lv: nextLevel }); }\r\n            else { updateHaving(id, { lv: nextLevel, mc: 1 }); }\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const maxManaCircle = entry.Spiral ? 70 : 50;\r\n    const mc = have ? have.mc : '';\r\n    const validateMc = (e) => {\r\n        const manaCircle = parseInt(e.target.value);\r\n        let nextMc = manaCircle;\r\n        if (isNaN(manaCircle) || manaCircle < 1) { nextMc = ''; }\r\n        else if (manaCircle > maxManaCircle) { nextMc = maxManaCircle; }\r\n        if (nextMc) {\r\n            if (have) { updateHaving(id, { mc: nextMc }); }\r\n            else { updateHaving(id, { lv: 1, mc: nextMc }); }\r\n            updateHaving(id, { mc: nextMc });\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const minRarity = entry.Rarity;\r\n    const [rarity, setRarity] = useState(entry.Rarity);\r\n    const updateRarity = () => {\r\n        if (minRarity === 5) { return; }\r\n        if (minRarity < 5 && (lv > 70 || mc > 40)) { setRarity(5); return; }\r\n        if (minRarity < 4 && (lv > 60 || mc > 30)) { setRarity(4); return; }\r\n        setRarity(minRarity);\r\n    }\r\n\r\n    const setMaxHave = () => {\r\n        setRarity(5);\r\n        const nextHave = { lv: maxLevel, mc: maxManaCircle };\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const setDefaultHave = () => {\r\n        setRarity(minRarity);\r\n        const nextHave = DEFAULT_HAVE.chara[minRarity];\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        if (!have || (have.lv === maxLevel && have.mc === maxManaCircle)) { setDefaultHave(); }\r\n        else { setMaxHave(); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) { setRarity(minRarity); deleteHaving(id); }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => (\r\n        <React.Fragment>\r\n            {(!editing && have ? (have.mc > 0) : false) &&\r\n                <Box className={clsx(classes.mcIcon, have.mc === maxManaCircle && classes.mcIconMaxed)}>{mc}</Box>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    const CardEditFields = () => (\r\n        <React.Fragment>\r\n            <TextField label=\"Lv\" value={lv} onInput={validateLv.bind(this)} />\r\n            <TextField label=\"MC\" value={mc} onInput={validateMc.bind(this)} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={`${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`}\r\n        CardIconDeco={CardIconDeco}\r\n        CardEditFields={CardEditFields} />)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function amuletCardIcon(category, id, count) {\r\n    if (count > 3) { return `${process.env.PUBLIC_URL}/${category}/${id}_02.png`; }\r\n    else { return `${process.env.PUBLIC_URL}/${category}/${id}_01.png`; }\r\n}\r\n\r\nexport function UnbindableListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n            const nextC = count - (count === '' || count < dh.c ? 1 : dh.c);\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    const CardEditFields = () => (\r\n        <React.Fragment>\r\n            <TextField label=\"Count\" value={count} onInput={validateCount.bind(this)} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}\r\n        CardEditFields={CardEditFields} />)\r\n}","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, UnbindableListingItem, amuletCardIcon } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans Condensed\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(3)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          availabilities={Availabilities.Weapon}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          cardIconFn={amuletCardIcon}\r\n          minRarity={2}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}