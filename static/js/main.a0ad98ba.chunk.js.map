{"version":3,"sources":["data/Mapping.js","view/ListingItems.js","view/ListingControls.js","view/Listing.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","9","ELEMENTS","RARITIES","ELEMENT_BG_COLORS","ELEMENT_FG_COLORS","DEFAULT_HAVE","chara","lv","mc","dragon","c","amulet","weapon","b","WEAPON_LEVELS","useStyles","makeStyles","root","width","transition","cardIcon","margin","height","cardIconEditing","cardCountIcon","cardName","padding","cardNameText","fontWeight","fontSize","textTransform","letterSpacing","cardCount","marginBottom","cardCountText","cardNameNoWrap","whiteSpace","cardEdit","paddingLeft","paddingRight","visibility","cardEditEditing","mcIcon","backgroundImage","process","backgroundRepeat","backgroundSize","textAlign","lineHeight","color","textShadow","position","top","left","mcIconMaxed","circleIcon","backgroundColor","borderRadius","circleIconMaxed","circleIcon0","circleIcon1","circleIcon2","circleIcon3","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","dialogIcon","abilityCheckTooltip","abilityCheck","abilityIcon","grayscale","filter","Flame","Water","Wind","Light","Shadow","Null","FgFlame","FgWater","FgWind","FgLight","FgShadow","FgNull","insertLinebreak","name","locale","replace","BaseListingItem","props","entry","have","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","classes","Grid","item","Card","className","clsx","Element","CardActionArea","onClick","onContextMenu","CardMedia","image","title","alt","CardContent","Button","size","endIcon","CardActions","CharaListingItem","id","updateHaving","deleteHaving","useState","setEditing","maxLevel","Spiral","maxManaCircle","minRarity","Rarity","rarity","setRarity","updateRarity","e","nextHave","setDefaultHave","preventDefault","Fragment","Box","TextField","label","value","onInput","level","parseInt","target","nextLevel","isNaN","bind","this","manaCircle","nextMc","standardCardIcon","category","count","amuletCardIcon","UnbindableListingItem","cardIconFn","dh","step","nextC","mub","r","Math","max","container","justify","map","i","TextLabel","COUNT","focus","fullWeaponHave","build","WeaponBuild","Build","Object","keys","length","Passive","p","doneWeaponHave","unbindReq","UnbindReq","floor","Series","prereqWeaponHaves","tempHaving","prereq","prereqHaves","Create","Weapon","Prereq","FullUp","WeaponListingItem","Skins","React","open","setOpen","handleClose","createThisHaving","newHave","prereqs","deleteThisHaving","setBuildValues","piece","min","reduce","acc","cur","idx","makeBuildChange","setAbilityValues","checked","handleAbilityCheck","split","slice","doneHave","bi","Dialog","onClose","aria-labelledby","DialogTitle","FormControlLabel","control","Checkbox","icon","src","checkedIcon","Typography","variant","display","WeaponSeries","DialogContent","dividers","buildInfo","buildpiece","buildvalue","key","gutterBottom","Slider","valueLabelDisplay","onChange","marks","colorPrimary","passive","abilityName","Ability","iconPath","Icon","Tooltip","aria-label","placement","popper","MaterialSummaryItem","m","align","fortMaxNum","NameEN","endsWith","FortListingItem","maxHave","values","Detail","maxLv","maxNum","makeLevelChange","Array","fill","fullWidth","_","currentLevel","marginTop","sortSelect","radioGroup","marginLeft","radioTitle","radioRoot","radioIcon","unchecked","opacity","availButton","maxWidth","availChecks","paddingTop","costTitle","minHeight","WeaponMaterialSummation","having","visible","toggleOpen","event","type","totalCost","totalMats","wpn","currHave","bld","bs","Cost","Mats","sorted","sort","a","Material","SortId","MATS","anchor","style","verticalAlign","toLocaleString","spacing","alignItems","wrap","FortMaterialSummation","totalTime","Fort","currIter","curLv","detail","Time","ListingControls","maxRarity","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","series","havingWeapon","havingFort","isGacha","isFort","handleBoolCheckFilters","radioFilterValues","res","handleRadioFilter","anchorEl","setAnchorEl","handleClick","currentTarget","Boolean","handleAvail","nextAvail","Availability","push","index","indexOf","splice","handleSeries","nextSeries","AppBar","FormControl","InputLabel","SORT_BY","Select","select","so","MenuItem","toUpperCase","IconButton","ifHave","HAVE","ifNotHave","NOT_HAVE","ifMaxed","MAXED","ifNotMaxLevel","NOT_MAXED","rf","component","FormLabel","disabled","RadioGroup","toString","row","v","Radio","AVAILABILITY","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","includes","SERIES","sr","weaponSeriesSortOrder","SortMethods","byID","entries","byNameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","byWeapon","byRarity","bySeries","byType","Type","CheckFilterMethods","undefined","loadLocalObj","storeKey","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","sortDefault","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","setHaving","changes","newHaving","storeFilterKey","setFilters","visibleEntries","sortedId","reverse","f","every","visibleHave","nextOrder","filterType","newFilters","total","statLabel","COMPLETION","theme","createMuiTheme","typography","fontFamily","TabPanel","other","role","hidden","a11yProps","App","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","Tabs","newIdx","indicatorColor","textColor","scrollButtons","Tab","ADVENTURERS","DRAGONS","AMULETS","FACILITY","dir","Chara","Availabilities","Dragon","Amulet","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0ad98ba.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff',\r\n    9: 'Gun'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const RARITIES = {\r\n    0: '0_Star',\r\n    1: '1_Star',\r\n    2: '2_Star',\r\n    3: '3_Star',\r\n    4: '4_Star',\r\n    5: '5_Star',\r\n    6: '6_Star',\r\n}\r\n\r\nexport const ELEMENT_BG_COLORS = {\r\n    Null: 'rgb(192, 192,192)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const ELEMENT_FG_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(204, 0, 0)',\r\n    Water: 'rgb(0, 51, 204)',\r\n    Wind: 'rgb(0, 153, 0)',\r\n    Light: 'rgb(255,180,0)',\r\n    Shadow: 'rgb(102, 0, 204)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    },\r\n    amulet: {\r\n        2: { c: 5 },\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 5 },\r\n        6: { c: 5 },\r\n    },\r\n    weapon: {\r\n        2: { b: { 6: 1 } },\r\n        3: { b: { 6: 1 } },\r\n        4: { b: { 6: 1 } },\r\n        5: { b: { 6: 1 } },\r\n        6: { b: { 6: 1 } }\r\n    }\r\n}\r\n\r\nexport const WEAPON_LEVELS = {\r\n    2: [6, 7, 8, 9, 10],\r\n    3: [12, 14, 16, 18, 20],\r\n    4: [18, 21, 24, 27, 30],\r\n    5: [30, 35, 40, 45, 50, 55, 60, 65, 70],\r\n    6: [40, 45, 50, 55, 60, 65, 70, 75, 80, 85]\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponSeries from '../data/weaponseries.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport { ELEMENTS, ELEMENT_BG_COLORS, ELEMENT_FG_COLORS, DEFAULT_HAVE, WEAPON_LEVELS } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardCountIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 90,\r\n        width: 90\r\n    },\r\n    cardName: {\r\n        padding: '0 !important',\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardCount: {\r\n        padding: '0 !important',\r\n        height: '1em',\r\n        marginBottom: 8,\r\n    },\r\n    cardCountText: {\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        letterSpacing: -1,\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 4\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    circleIcon: {\r\n        backgroundColor: 'gray',\r\n        textAlign: 'center',\r\n        width: 19,\r\n        height: 19,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        borderRadius: 50,\r\n        top: 5,\r\n    },\r\n    circleIconMaxed: {\r\n        color: '#48D1CC'\r\n    },\r\n    circleIcon0: {\r\n        left: 4\r\n    },\r\n    circleIcon1: {\r\n        left: 25,\r\n    },\r\n    circleIcon2: {\r\n        left: 46,\r\n    },\r\n    circleIcon3: {\r\n        left: 67,\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n    dialogIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    abilityCheckTooltip: {\r\n        top: '10px !important',\r\n        padding: 0,\r\n        fontSize: '1.2em'\r\n    },\r\n    abilityCheck: {\r\n        padding: 0\r\n    },\r\n    abilityIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    grayscale: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    Flame: { backgroundColor: ELEMENT_BG_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_BG_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_BG_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_BG_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_BG_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_BG_COLORS.Null },\r\n    FgFlame: { color: ELEMENT_FG_COLORS.Flame },\r\n    FgWater: { color: ELEMENT_FG_COLORS.Water },\r\n    FgWind: { color: ELEMENT_FG_COLORS.Wind },\r\n    FgLight: { color: ELEMENT_FG_COLORS.Light },\r\n    FgShadow: { color: ELEMENT_FG_COLORS.Shadow },\r\n    FgNull: { color: ELEMENT_FG_COLORS.Null },\r\n});\r\n\r\nexport const insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const maxLevel = entry.Spiral ? 100 : 80;\r\n    const lv = have ? have.lv : '';\r\n    const validateLv = (e) => {\r\n        const level = parseInt(e.target.value);\r\n        let nextLevel = level;\r\n        if (isNaN(level) || level < 1) { nextLevel = ''; }\r\n        else if (level > maxLevel) { nextLevel = maxLevel; }\r\n        if (nextLevel) {\r\n            if (have) { updateHaving(id, { lv: nextLevel }); }\r\n            else { updateHaving(id, { lv: nextLevel, mc: 1 }); }\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const maxManaCircle = entry.Spiral ? 70 : 50;\r\n    const mc = have ? have.mc : '';\r\n    const validateMc = (e) => {\r\n        const manaCircle = parseInt(e.target.value);\r\n        let nextMc = manaCircle;\r\n        if (isNaN(manaCircle) || manaCircle < 1) { nextMc = ''; }\r\n        else if (manaCircle > maxManaCircle) { nextMc = maxManaCircle; }\r\n        if (nextMc) {\r\n            if (have) { updateHaving(id, { mc: nextMc }); }\r\n            else { updateHaving(id, { lv: 1, mc: nextMc }); }\r\n            updateHaving(id, { mc: nextMc });\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const minRarity = entry.Rarity;\r\n    const [rarity, setRarity] = useState(entry.Rarity);\r\n    const updateRarity = () => {\r\n        if (minRarity === 5) { return; }\r\n        if (minRarity < 5 && (lv > 70 || mc > 40)) { setRarity(5); return; }\r\n        if (minRarity < 4 && (lv > 60 || mc > 30)) { setRarity(4); return; }\r\n        setRarity(minRarity);\r\n    }\r\n\r\n    const setMaxHave = () => {\r\n        setRarity(5);\r\n        const nextHave = { lv: maxLevel, mc: maxManaCircle };\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const setDefaultHave = () => {\r\n        setRarity(minRarity);\r\n        const nextHave = DEFAULT_HAVE.chara[minRarity];\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        if (!have || (have.lv === maxLevel && have.mc === maxManaCircle)) { setDefaultHave(); }\r\n        else { setMaxHave(); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) { setRarity(minRarity); deleteHaving(id); }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => (\r\n        <React.Fragment>\r\n            {(!editing && have ? (have.mc > 0) : false) &&\r\n                <Box className={clsx(classes.mcIcon, have.mc === maxManaCircle && classes.mcIconMaxed)}>{mc}</Box>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={`${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField label=\"Lv\" value={lv} onInput={validateLv.bind(this)} />\r\n        <TextField label=\"MC\" value={mc} onInput={validateMc.bind(this)} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function amuletCardIcon(category, id, count) {\r\n    if (count > 3) { return `${process.env.PUBLIC_URL}/${category}/${id}_02.png`; }\r\n    else { return `${process.env.PUBLIC_URL}/${category}/${id}_01.png`; }\r\n}\r\n\r\nexport function UnbindableListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nconst fullWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    if (entry.Passive) {\r\n        have.p = {};\r\n        for (let i of Object.keys(entry.Passive)) {\r\n            have.p[i] = true;\r\n        }\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    if (build[5]) {\r\n        const unbindReq = Math.max(build[5].map((b) => b.UnbindReq));\r\n        const have = {\r\n            b: {\r\n                1: unbindReq,\r\n                5: build[5].length,\r\n                6: 1\r\n            }\r\n        }\r\n        if (build[2]) {\r\n            have.b[2] = Math.floor(Math.max(0, unbindReq - 1) / 4);\r\n        }\r\n        if (entry.Series === 4) {\r\n            have.b[1] = build[1].length;\r\n            have.b[2] = build[2].length;\r\n            have.b[3] = build[3].length;\r\n        }\r\n        return have;\r\n    } else if (!build[6]) {\r\n        // special case for agito\r\n        return fullWeaponHave(entry);\r\n    } else {\r\n        return { b: { 6: 1 } };\r\n    }\r\n}\r\n\r\nconst prereqWeaponHaves = (tempHaving, prereq, prereqHaves) => {\r\n    prereqHaves = prereqHaves || {};\r\n    for (let i of prereq.Create) {\r\n        if (!tempHaving[i]) {\r\n            prereqHaves[i] = { b: { 6: 1 } };\r\n        }\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[i].Prereq, prereqHaves);\r\n    }\r\n    if (prereq.FullUp) {\r\n        prereqHaves[prereq.FullUp] = fullWeaponHave(Weapon[prereq.FullUp]);\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[prereq.FullUp].Prereq, prereqHaves);\r\n    }\r\n    return prereqHaves;\r\n}\r\n\r\nexport function WeaponListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have && have.b[2] && have.b[2] === 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"1\"]}.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"0\"]}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = WeaponBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        // let tempHaving = updateHaving(id, newHave || doneWeaponHave(entry));\r\n        let tempHaving = updateHaving(id, newHave || { b: { 6: 1 } });\r\n        const prereqs = prereqWeaponHaves(tempHaving, entry.Prereq);\r\n        for (let i of Object.keys(prereqs)) {\r\n            tempHaving = updateHaving(i, prereqs[i], tempHaving);\r\n        }\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneWeaponHave(entry);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            if (have.p) {\r\n                doneHave.p = have.p;\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            let tempHaving = deleteHaving(id);\r\n            for (let i of Object.keys(tempHaving)) {\r\n                const prereqs = prereqWeaponHaves({}, Weapon[i].Prereq);\r\n                if (prereqs[id]) {\r\n                    tempHaving = deleteHaving(i, tempHaving);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        if (piece === '1' && build[5]) {\r\n            have.b[5] = Math.min(have.b[5] || 0, build[5].reduce((acc, cur, idx) => {\r\n                return cur.UnbindReq > value ? acc : (idx + 1);\r\n            }, 0));\r\n        } else if (piece === '2') {\r\n            have.b[1] = Math.min(have.b[1] || 0, (value + 1) * 4);\r\n        } else {\r\n            const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n            have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        }\r\n        if (build[2] && piece !== '2') {\r\n            have.b[2] = Math.max(have.b[2] || 0, Math.floor(Math.max(have.b[1] - 1) / 4));\r\n        }\r\n        if (have.p) {\r\n            for (let p of Object.keys(have.p)) {\r\n                if (entry.Passive[p].UnbindReq > have.b[1]) {\r\n                    have.p[p] = false;\r\n                }\r\n            }\r\n        }\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n    const setAbilityValues = (p, checked, have) => {\r\n        if (!have.p) {\r\n            have.p = {}\r\n        }\r\n        have.p[p] = checked;\r\n        if (checked) {\r\n            have.b[1] = Math.max(have.b[1] || 0, entry.Passive[p].UnbindReq);\r\n        }\r\n        return have;\r\n    }\r\n    const handleAbilityCheck = (e) => {\r\n        const p = e.target.name.split('-').slice(-1);\r\n        const checked = e.target.checked;\r\n        if (have) {\r\n            updateHaving(id, setAbilityValues(p, checked, have));\r\n        } else {\r\n            const newHave = { b: { 6: 1 } };\r\n            createThisHaving(setAbilityValues(p, checked, newHave));\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (<Box className={clsx(classes.mcIcon, have.b[5] && classes.mcIconMaxed)}>\r\n                        {WEAPON_LEVELS[entry.Rarity][have.b[1] || 0]}\r\n                    </Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography variant=\"overline\" display=\"block\">{WeaponSeries[entry.Series][`Name${locale}`]}</Typography><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes[`Fg${ELEMENTS[entry.Element]}`] || classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n            {entry.Passive && (< DialogContent dividers>\r\n                {Object.keys(entry.Passive).map((p) => {\r\n                    const passive = entry.Passive[p];\r\n                    const abilityName = passive.Ability[`Name${locale}`];\r\n                    const iconPath = `${process.env.PUBLIC_URL}/ability/${passive.Ability.Icon}.png`;\r\n                    return (\r\n                        <Tooltip key={p} title={abilityName} aria-label={abilityName} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                            <Checkbox\r\n                                name={`${id}-passive-${p}`}\r\n                                onClick={handleAbilityCheck}\r\n                                color=\"default\"\r\n                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                checked={!!(have && have.p && have.p[p])}\r\n                                icon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                checkedIcon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon)} />}\r\n                            />\r\n                        </Tooltip>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function MaterialSummaryItem(props) {\r\n    const { m, count, name } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item>\r\n            <Card>\r\n                <CardMedia\r\n                    className={clsx(classes.cardCountIcon)}\r\n                    image={`${process.env.PUBLIC_URL}/material/${m}.png`}\r\n                    title={name} alt={name} >\r\n                </CardMedia>\r\n                <CardContent className={clsx(classes.cardCount)}>\r\n                    <Typography align=\"center\" className={clsx(classes.cardCountText)} display=\"block\">x {count}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const fortMaxNum = (entry) => {\r\n    if (entry.NameEN === 'Rupie Mine') {\r\n        return 4;\r\n    }\r\n    if (entry.NameEN.endsWith('Altar') || entry.NameEN.endsWith('Dojo')) {\r\n        return 2;\r\n    }\r\n    return 1\r\n}\r\n\r\nexport function FortListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have) {\r\n        const maxHave = Math.max(...Object.values(have));\r\n        if (maxHave <= 0) {\r\n            deleteHaving(id);\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n        } else {\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[maxHave - 1].Icon}.png`;\r\n        }\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const maxLv = entry.Detail.length;\r\n    const maxNum = fortMaxNum(entry);\r\n\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, (new Array(maxNum)).fill(maxLv));\r\n        } else {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteHaving(id);\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        } else {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const makeLevelChange = (idx) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                have[idx] = value;\r\n                updateHaving(id, have);\r\n            } else {\r\n                const newHave = (new Array(maxNum)).fill(0);\r\n                newHave[idx] = value;\r\n                updateHaving(id, newHave);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (Object.keys(have).map((key) => (<Box className={clsx(classes.circleIcon, classes[`circleIcon${key}`], (have[key] >= maxLv) && classes.circleIconMaxed)}>{have[key]}</Box>)))}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open} fullWidth={'md'}\r\n        >\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {Array(maxNum).fill(0).map((_, idx) => {\r\n                    const currentLevel = have ? have[idx] : 0;\r\n                    return (\r\n                        <Box key={idx}>\r\n                            <Typography id=\"level-slider\" gutterBottom>\r\n                                {`${cardName} ${(idx + 1)} - Lv.${currentLevel}`}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-level-${idx + 1}`}\r\n                                aria-labelledby=\"level-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={currentLevel}\r\n                                onChange={makeLevelChange(idx)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={maxLv}\r\n                                classes={classes.FgNull}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport Fort from '../data/fort.json';\r\nimport Material from '../data/material.json';\r\nimport { ELEMENTS, WEAPONS, RARITIES } from '../data/Mapping';\r\nimport { doneWeaponHave, MaterialSummaryItem, fortMaxNum } from './ListingItems';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    costTitle: {\r\n        minHeight: '2.5em'\r\n    }\r\n});\r\n\r\n\r\nfunction WeaponMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    // maybe come bacc and count up passive ability mats too :v\r\n    for (let id of visible) {\r\n        const wpn = Weapon[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneWeaponHave(wpn);\r\n        const bld = WeaponBuild[wpn.Build];\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6' || doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of bld[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += wpn.Cost;\r\n            for (let m of Object.keys(wpn.Mats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += wpn.Mats[m];\r\n            }\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6') { continue; }\r\n                for (const bs of bld[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img style={{ verticalAlign: 'middle' }} src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction FortMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    let totalTime = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Fort[id];\r\n        const currHave = having[id];\r\n        let currIter = null;\r\n        if (currHave) {\r\n            currIter = Object.values(currHave);\r\n        } else {\r\n            currIter = Array(fortMaxNum(entry)).fill(0);\r\n        }\r\n        for (const curLv of currIter) {\r\n            for (const detail of entry.Detail.slice(curLv)) {\r\n                totalCost += detail.Cost;\r\n                totalTime += detail.Time;\r\n                for (let m of Object.keys(detail.Mats)) {\r\n                    if (!totalMats[m]) { totalMats[m] = 0; }\r\n                    totalMats[m] += detail.Mats[m];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img style={{ verticalAlign: 'middle' }} src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom> {totalCost.toLocaleString()}</Typography>\r\n                    <QueryBuilderIcon style={{ verticalAlign: 'middle', marginLeft: 4 }} />\r\n                    <Typography display=\"inline\" gutterBottom> {totalTime.toLocaleString()}s</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities, series, havingWeapon, havingFort,\r\n        visible, isGacha, isFort\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        // eslint-disable-next-line\r\n        'Rarity': Object.keys(RARITIES).filter(r => (r == 0 || (r >= minRarity && r <= maxRarity))).reduce((res, key) => { res[key] = RARITIES[key]; return res; }, {})\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n    const handleSeries = (e) => {\r\n        let nextSeries = filters.Series || [];\r\n        if (e.target.checked) { nextSeries.push(e.target.name); }\r\n        else {\r\n            const index = nextSeries.indexOf(e.target.name);\r\n            if (index >= 0) { nextSeries.splice(index, 1); }\r\n        }\r\n        if (nextSeries.length === 0) { removeFilter('Series'); }\r\n        else { addFilter('Series', nextSeries); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n    const clearSeries = (e) => { removeFilter('Series'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                {isGacha && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifMaxed} name=\"ifMaxed\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].MAXED} />\r\n                </Grid>}\r\n                {isFort && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotMaxLevel} name=\"ifNotMaxLevel\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].NOT_MAXED} />\r\n                </Grid>}\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                {availabilities && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearAvail}>Clear</Button>\r\n                                {availabilities.map((av) => (\r\n                                    <FormControlLabel key={av}\r\n                                        control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                        label={TextLabel[locale][av] || av} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {series && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].SERIES}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearSeries}>Clear</Button>\r\n                                {Object.keys(series).map((sr) => (\r\n                                    <FormControlLabel key={sr}\r\n                                        control={<Checkbox onChange={handleSeries.bind(this)} name={sr} checked={Boolean(filters.Series && filters.Series.includes(sr))} color=\"primary\" />}\r\n                                        label={series[sr][`Name${locale}`]} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {havingWeapon && (<WeaponMaterialSummation locale={locale} having={havingWeapon} visible={visible} />)}\r\n                {havingFort && (<FortMaterialSummation locale={locale} having={havingFort} visible={visible} />)}\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\nimport { doneWeaponHave, fortMaxNum } from './ListingItems';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\n\r\nconst weaponSeriesSortOrder = {\r\n    4: -6,\r\n    3: -5,\r\n    5: -4,\r\n    2: -3,\r\n    1: -2,\r\n    6: -1,\r\n}\r\n\r\nconst SortMethods = {\r\n    byID: (entries) => (Object.keys(entries)),\r\n    byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n    byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n    byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n    byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n    byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n    byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    bySeries: (entries) => Object.keys(entries).sort((a, b) => (weaponSeriesSortOrder[entries[a].Series] - weaponSeriesSortOrder[entries[b].Series] || entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    byType: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Type - entries[b].Type || a - b))\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifMaxed: (entry, have) => {\r\n        if (have) {\r\n            if (entry.Series !== undefined) {\r\n                const doneHave = doneWeaponHave(entry);\r\n                return Object.keys(doneHave).reduce((acc, cur) => {\r\n                    if (!acc) { return false; }\r\n                    if (!have[cur]) { return false; }\r\n                    return have[cur] >= doneHave[cur];\r\n                })\r\n            } else if (entry.Spiral === undefined) { return have.c >= 5; }\r\n            else { return entry.Spiral ? (have.lv === 100 && have.mc === 70) : have.lv === 80 && have.mc === 50; }\r\n        }\r\n        return false;\r\n    },\r\n    ifNotMaxLevel: (entry, have) => {\r\n        if (have) {\r\n            return entry.Detail.length > Math.min(...Object.values(have));\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const {\r\n        locale, entries, availabilities, series,\r\n        storeKey, cardIconFn, minRarity, maxRarity,\r\n        sortDefault, sortOptions, radioFilters, ItemComponent\r\n    } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        let sortedId = null;\r\n        if (sort === 'byName') {\r\n            sortedId = SortMethods[`byName${locale}`](entries);\r\n        } else {\r\n            sortedId = SortMethods[sort](entries);\r\n        }\r\n        if (order === 'DSC') {\r\n            sortedId = sortedId.reverse();\r\n        }\r\n        return sortedId;\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes, tempHaving) => {\r\n        const newHaving = {\r\n            ...(tempHaving || having),\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n    const deleteHaving = (id, tempHaving) => {\r\n        const newHaving = { ...(tempHaving || having) };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability' || filterType === 'Series') {\r\n            newFilters[filterType] = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            } else if (f === 'Series' && (!filters.Series.includes(entry.Series.toString()))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                if (storeKey === 'weapon') {\r\n                    newHaving[id] = doneWeaponHave(entries[id]);\r\n                } else if (storeKey === 'fort') {\r\n                    newHaving[id] = (new Array(fortMaxNum(entries[id]))).fill(entries[id].Detail.length);\r\n                } else {\r\n                    newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n                }\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        let count = visibleHave;\r\n        let total = visibleEntries.length;\r\n        if (storeKey === 'weapon') {\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? (having[id].b[5] ? 1 : 0) : 0)), 0);\r\n            total = visibleEntries.reduce((res, id) => (res + (WeaponBuild[entries[id].Build][5] ? 1 : 0)), 0);\r\n        } else if (storeKey === 'fort') {\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? Object.values(having[id]).reduce((a, b) => a + b, 0) : 0)), 0);\r\n            total = visibleEntries.reduce((res, id) => (res + (fortMaxNum(entries[id]) * entries[id].Detail.length)), 0);\r\n        }\r\n        const p = ((100 * count / total) >> 0)\r\n        return `${title}: ${count} / ${total} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n                series={series}\r\n                havingWeapon={storeKey === 'weapon' && having}\r\n                havingFort={storeKey === 'fort' && having}\r\n                visible={visibleEntries}\r\n                isGacha={storeKey === 'chara' || storeKey === 'dragon'}\r\n                isFort={storeKey === 'fort'}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, UnbindableListingItem, WeaponListingItem, FortListingItem, amuletCardIcon } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\nimport WeaponSeries from './data/weaponseries.json';\r\nimport Fort from './data/fort.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(3)} />\r\n            <Tab label={TextLabel[locale].FACILITY} {...a11yProps(4)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          cardIconFn={amuletCardIcon}\r\n          minRarity={2}\r\n          maxRarity={5}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          series={WeaponSeries}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'bySeries']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={WeaponListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={4} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Fort}\r\n          storeKey={'fort'}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byType']}\r\n          radioFilters={[]}\r\n          ItemComponent={FortListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}