{"version":3,"sources":["data/Mapping.js","view/ListingItems.js","view/ListingControls.js","view/Listing.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","9","ELEMENTS","FORMS","ELEMENT_BG_COLORS","ELEMENT_FG_COLORS","DEFAULT_HAVE","chara","lv","mc","dragon","c","unionIcon","union","toLocaleString","minimumIntegerDigits","useGrouping","useStyles","makeStyles","root","width","transition","cardIcon","margin","height","cardIconEditing","cardCountIcon","cardName","padding","cardNameText","fontWeight","fontSize","textTransform","letterSpacing","cardCount","marginBottom","cardCountText","cardNameNoWrap","whiteSpace","cardEdit","paddingLeft","paddingRight","visibility","cardEditEditing","position","top","left","zIndex","amuletAbIcon","mcIcon","backgroundImage","process","backgroundRepeat","backgroundSize","textAlign","lineHeight","color","textShadow","mcIconMaxed","mcIconAmulet","circleIcon","backgroundColor","borderRadius","circleIconMaxed","circleIcon0","circleIcon1","circleIcon2","circleIcon3","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","dialogIcon","abilityCheckTooltip","abilityCheck","abilityIcon","grayscale","filter","mcTab","minWidth","mcTabpanel","display","gridTemplateColumns","gridAutoFlow","mcTabUb","gridColumnStart","gridColumnEnd","Flame","Water","Wind","Light","Shadow","Null","FgFlame","FgWater","FgWind","FgLight","FgShadow","FgNull","insertLinebreak","name","locale","replace","BaseListingItem","props","entry","have","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","classes","Grid","item","Card","className","clsx","Element","CardActionArea","onClick","onContextMenu","CardMedia","image","title","alt","CardContent","Button","size","endIcon","CardActions","doneCharaHave","unbind","ub","Rarity","no","Array","from","length","_","i","MaxLimitBreak","MC_STATIC","10101","10102","10103","10601","10602","10701","10801","MC_PIECE_NAME","10201","10301","10302","10303","10401","10402","10501","mapMCRange","start","Math","floor","CharaListingItem","id","category","updateHaving","deleteHaving","React","useState","open","setOpen","handleClose","mcInfo","ManaCircle","MCName","undefined","deleteThisHaving","mcNum","maxManaCircle","rarity","max","min","mcRanges","push","mcIdx","setMcIdx","handleMCCheck","e","seq","parseInt","target","split","slice","mcItem","newUb","Hierarchy","newNo","No","index","indexOf","splice","getMCChecked","includes","handleUbCheck","ubSeq","getUbChecked","preventDefault","Box","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","FormControlLabel","control","Checkbox","checked","icon","src","checkedIcon","label","Typography","DialogContent","dividers","Tabs","value","onChange","newMcIdx","indicatorColor","textColor","variant","scrollButtons","map","mcRange","Tab","key","aria-controls","component","role","hidden","dir","piece","Piece","img","txt","ExAbility","Step","step","DefaultLv","FS","abi","Abilities","si","Skills","Story","MCPieceIcon","ubItem","Tooltip","aria-label","placement","popper","seqMcTxt","Fragment","standardCardIcon","count","DragonListingItem","cardIconFn","setEditing","dh","nextC","mub","r","container","justify","TextField","TextLabel","COUNT","onInput","isNaN","focus","fullWeaponHave","build","WeaponBuild","Build","b","Object","keys","Passive","p","doneWeaponHave","fullWeapon","unbindReq","UnbindReq","prereqWeaponHaves","tempHaving","prereq","prereqHaves","Create","Weapon","Prereq","FullUp","WeaponListingItem","Skins","createThisHaving","newHave","prereqs","setBuildValues","reduce","acc","cur","idx","makeBuildChange","setAbilityValues","handleAbilityCheck","levelData","Level","Mats","WeaponLevel","doneHave","bi","WeaponSeries","Series","buildInfo","buildpiece","buildvalue","gutterBottom","Slider","valueLabelDisplay","marks","colorPrimary","passive","abilityName","Ability","iconPath","Icon","MaterialSummaryItem","m","align","fortMaxNum","NameEN","endsWith","FortListingItem","maxHave","values","Detail","maxLv","maxNum","makeLevelChange","fill","fullWidth","currentLevel","doneAmuletHave","fullCopies","AmuletBuild","fullAmuletHave","AmuletListingItem","NoRefine","BaseId","AmuletLevel","AbIcon","Union","marginTop","sortSelect","radioGroup","marginLeft","radioTitle","radioRoot","radioIcon","unchecked","opacity","availButton","availChecks","paddingTop","costTitle","minHeight","verticalAlign","fullToggle","float","WeaponMaterialSummation","having","visible","fullAgito","setFullAgito","isFullAgito","toggleOpen","event","type","totalCost","totalMats","currHave","bs","Cost","currLevelMats","doneLevelMats","diff","sorted","sort","a","Material","SortId","MATS","anchor","spacing","alignItems","wrap","FortMaterialSummation","totalTime","Fort","currIter","curLv","detail","Time","style","AmuletMaterialSummation","setFullCopies","isFullCopies","Amulet","entryMats","tm","CharaMaterialSummation","totalCosts","Mana","Eldwater","Chara","clbInfo","CharaLimitBreak","LimitBreak","useGrow","GrowEnd","Date","now","Grow","calcNodeMats","n","mcEle","Ele","MCEle","ListingControls","minRarity","maxRarity","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","series","storeKey","handleBoolCheckFilters","radioFilterValues","res","offset","handleRadioFilter","anchorEl","setAnchorEl","handleClick","currentTarget","Boolean","handleAvail","nextAvail","Availability","handleSeries","nextSeries","AppBar","FormControl","InputLabel","SORT_BY","Select","select","so","MenuItem","toUpperCase","IconButton","ifHave","bind","this","HAVE","ifNotHave","NOT_HAVE","ifMaxed","MAXED","ifNotMaxLevel","NOT_MAXED","rf","FormLabel","disabled","RadioGroup","toString","row","v","Radio","AVAILABILITY","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","SERIES","sr","weaponSeriesSortOrder","SortMethods","byID","entries","byNameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","byWeapon","byRarity","bySeries","byType","Type","byForm","Form","CheckFilterMethods","Spiral","loadLocalObj","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","sortDefault","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","setHaving","changes","newHaving","storeFilterKey","setFilters","visibleEntries","sortedId","reverse","f","every","visibleHave","nextOrder","filterType","newFilters","total","halidom","statLabel","COMPLETION","theme","createMuiTheme","typography","fontFamily","TabPanel","other","a11yProps","App","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","newIdx","ADVENTURERS","DRAGONS","AMULETS","FACILITY","Availabilities","Dragon","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.87253a90.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff',\r\n    9: 'Gun'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const FORMS = {\r\n    0: 'Form0',\r\n    2: 'FormB',\r\n    1: 'FormA',\r\n    3: 'FormC',\r\n}\r\n\r\nexport const ELEMENT_BG_COLORS = {\r\n    Null: 'rgb(192, 192,192)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const ELEMENT_FG_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(204, 0, 0)',\r\n    Water: 'rgb(0, 51, 204)',\r\n    Wind: 'rgb(0, 153, 0)',\r\n    Light: 'rgb(255,180,0)',\r\n    Shadow: 'rgb(102, 0, 204)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    }\r\n}\r\n\r\nexport const unionIcon = (union) => (`Icon_Union_${union.toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}`);\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport ManaCircle from '../data/manacircle.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponSeries from '../data/weaponseries.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json'\r\n\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport { ELEMENTS, ELEMENT_BG_COLORS, ELEMENT_FG_COLORS, DEFAULT_HAVE, unionIcon } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardCountIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 90,\r\n        width: 90\r\n    },\r\n    cardName: {\r\n        padding: '0 !important',\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardCount: {\r\n        padding: '0 !important',\r\n        height: '1em',\r\n        marginBottom: 8,\r\n    },\r\n    cardCountText: {\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        letterSpacing: -1,\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    unionIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 48,\r\n        zIndex: 1\r\n    },\r\n    amuletAbIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 6,\r\n        left: 28,\r\n        zIndex: 2\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 3,\r\n        zIndex: 2\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    mcIconAmulet: {\r\n        top: 25,\r\n    },\r\n    circleIcon: {\r\n        backgroundColor: 'gray',\r\n        textAlign: 'center',\r\n        width: 19,\r\n        height: 19,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        borderRadius: 50,\r\n        top: 5,\r\n    },\r\n    circleIconMaxed: {\r\n        color: '#48D1CC'\r\n    },\r\n    circleIcon0: {\r\n        left: 4\r\n    },\r\n    circleIcon1: {\r\n        left: 25,\r\n    },\r\n    circleIcon2: {\r\n        left: 46,\r\n    },\r\n    circleIcon3: {\r\n        left: 67,\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n    dialogIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    abilityCheckTooltip: {\r\n        top: '10px !important',\r\n        padding: 0,\r\n        fontSize: '1.2em'\r\n    },\r\n    abilityCheck: {\r\n        padding: 0\r\n    },\r\n    abilityIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    grayscale: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    // mcGrid: {\r\n    //     display: 'grid',\r\n    //     gridTemplateColumns: 'repeat(6, 1fr)',\r\n    // },\r\n    // mcGridGap: {\r\n    //     marginBottom: 20\r\n    // },\r\n    // mcGridDiv: {\r\n    //     gridColumnStart: 1,\r\n    //     gridColumnEnd: 7,\r\n    //     marginTop: 5,\r\n    //     marginBottom: 5,\r\n    //     height: 1,\r\n    //     backgroundColor: 'black',\r\n    // },\r\n    mcTab: {\r\n        minWidth: 20,\r\n    },\r\n    mcTabpanel: {\r\n        display: 'grid',\r\n        margin: '0 auto',\r\n        gridTemplateColumns: 'repeat(5, 1fr)',\r\n        gridAutoFlow: 'dense',\r\n        textAlign: 'center',\r\n        width: 'fit-content',\r\n    },\r\n    mcTabUb: {\r\n        gridColumnStart: 1,\r\n        gridColumnEnd: 6,\r\n    },\r\n    Flame: { backgroundColor: ELEMENT_BG_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_BG_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_BG_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_BG_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_BG_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_BG_COLORS.Null },\r\n    FgFlame: { color: ELEMENT_FG_COLORS.Flame },\r\n    FgWater: { color: ELEMENT_FG_COLORS.Water },\r\n    FgWind: { color: ELEMENT_FG_COLORS.Wind },\r\n    FgLight: { color: ELEMENT_FG_COLORS.Light },\r\n    FgShadow: { color: ELEMENT_FG_COLORS.Shadow },\r\n    FgNull: { color: ELEMENT_FG_COLORS.Null },\r\n});\r\n\r\nexport const insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const doneCharaHave = (entry, unbind) => {\r\n    if (!unbind || unbind < 2) {\r\n        return {\r\n            ub: (entry.Rarity === 3) ? 2 : 3,\r\n            no: Array.from({ length: 10 }, (_, i) => i + 1)\r\n        }\r\n    }\r\n    if (unbind < 4) {\r\n        return {\r\n            ub: 4,\r\n            no: Array.from({ length: 10 }, (_, i) => i + 1)\r\n        }\r\n    }\r\n    return {\r\n        ub: entry.MaxLimitBreak,\r\n        no: (entry.MaxLimitBreak === 5) ? Array.from({ length: 20 }, (_, i) => i + 1) : Array.from({ length: 10 }, (_, i) => i + 1)\r\n    }\r\n}\r\n\r\nconst MC_STATIC = {\r\n    10101: 'Mc_StatusUp_Hp',\r\n    10102: 'Mc_StatusUp_Atk',\r\n    10103: 'Mc_StatusUp_HpAtk',\r\n    10601: 'Mc_Material_Get',\r\n    10602: 'Mc_Material_Get',\r\n    10701: 'Mc_Advanced_Training',\r\n    10801: 'Mc_Unbind_Level',\r\n}\r\nconst MC_PIECE_NAME = {\r\n    10101: '+Hp',\r\n    10102: '+Atk',\r\n    10103: '+Hp/Atk',\r\n    10201: 'FS Lv.',\r\n    10301: 'A1 Lv.',\r\n    10302: 'A2 Lv.',\r\n    10303: 'A3 Lv.',\r\n    10401: 'S1 Lv.',\r\n    10402: 'S2 Lv.',\r\n    10501: 'Ex Lv.',\r\n    10601: 'Item',\r\n    10701: 'Combo',\r\n    10801: '+Max Lv.'\r\n}\r\nconst MCPieceIcon = (entry, mcItem) => {\r\n    const piece = mcItem.Piece;\r\n    const icon = { img: null, txt: MC_PIECE_NAME[piece] };\r\n    if (MC_STATIC[piece]) {\r\n        icon.img = `${process.env.PUBLIC_URL}/manacircle/${MC_STATIC[piece]}.png`;\r\n    } else if (piece === 10501) {\r\n        // exability\r\n        icon.img = `${process.env.PUBLIC_URL}/ability/${entry.ExAbility}.png`;\r\n        icon.txt += mcItem.Step;\r\n    } else if (piece === 10201) {\r\n        // FS\r\n        const step = mcItem.Step + entry.DefaultLv.FS;\r\n        if (step === 2) {\r\n            icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_Burstattack_Upgrade.png`;\r\n        } else {\r\n            icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_Burstattack_Get.png`;\r\n        }\r\n\r\n        icon.txt += step;\r\n    } else if (piece >= 10301 && piece <= 10303) {\r\n        // Abilities\r\n        const abi = piece - 10300;\r\n        const step = mcItem.Step + entry.DefaultLv.Abilities[abi];\r\n        icon.img = `${process.env.PUBLIC_URL}/ability/${entry.Abilities[abi][step]}.png`;\r\n        icon.txt += step;\r\n    } else if (piece >= 10401 && piece <= 10402) {\r\n        // Skills\r\n        const si = piece - 10400;\r\n        const step = (si === 1) ? mcItem.Step + 1 : mcItem.Step;\r\n        icon.img = `${process.env.PUBLIC_URL}/skill/${entry.Skills[si][step]}.png`;\r\n        icon.txt += step;\r\n    }\r\n    // Story override\r\n    if (mcItem.Story) {\r\n        icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_CharaStory.png`;\r\n    }\r\n    return icon;\r\n}\r\n// 51 52 53 54 55   00 01 02 03 04\r\n// 60 59 58 57 56   05 06 07 08 09\r\n// 61 62 63 64 65   10 11 12 13 14\r\n// 70 69 68 67 66   15 16 17 18 19\r\n// \r\nconst mapMCRange = (i, start) => {\r\n    return (start + ((Math.floor(i / 5) % 2 === 0) ? (i + 1) : (Math.floor(i / 5) * 10 + 5 - i)));\r\n}\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const mcInfo = ManaCircle[entry.MCName];\r\n\r\n    if (have && (have.no === undefined || have.ub === undefined)) { deleteHaving(id); }\r\n\r\n    const createThisHaving = () => {\r\n        updateHaving(id, doneCharaHave(entry));\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, doneCharaHave(entry, have.ub));\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            updateHaving(id, {ub: 0, no: []});\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n\r\n    const mcNum = (have) ? have.ub * 10 + have.no.length : 0;\r\n    const maxManaCircle = (entry.MaxLimitBreak === 5) ? 70 : 50;\r\n    const rarity = (have) ? Math.max(entry.Rarity, Math.min(5, have.ub + 1)) : entry.Rarity;\r\n    const cardIconUrl = `${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`;\r\n\r\n    const mcRanges = [];\r\n    if (entry.MaxLimitBreak === 5) {\r\n        mcRanges.push(Array.from({ length: 20 }, (_, i) => mapMCRange(i, 50)));\r\n    }\r\n    for (let ub = 4; ub >= 0; ub -= 1) {\r\n        mcRanges.push(Array.from({ length: 10 }, (_, i) => mapMCRange(i, ub * 10)));\r\n    }\r\n\r\n    const [mcIdx, setMcIdx] = useState(0);\r\n    const handleTabs = (e, newMcIdx) => {\r\n        setMcIdx(newMcIdx);\r\n    };\r\n\r\n    const handleMCCheck = (e) => {\r\n        const seq = parseInt(e.target.name.split('-').slice(-1));\r\n        const mcItem = mcInfo[seq];\r\n        if (have) {\r\n            let newUb = mcItem.Hierarchy - 1;\r\n            let newNo = null;\r\n            if (have.ub < newUb) {\r\n                if (newUb === 5) {\r\n                    newNo = Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n                } else {\r\n                    newNo = [mcItem.No];\r\n                }\r\n            } else if (have.ub === newUb) {\r\n                if (newUb === 5) {\r\n                    newNo = Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n                } else {\r\n                    newNo = [...have.no];\r\n                    const index = newNo.indexOf(mcItem.No);\r\n                    if (index > -1) {\r\n                        newNo.splice(index, 1);\r\n                    } else {\r\n                        newNo.push(mcItem.No);\r\n                    }\r\n                }\r\n            } else if (have.ub > newUb) {\r\n                if (newUb === 5) {\r\n                    newNo = Array.from({ length: (mcItem.No - 1) }, (_, i) => i + 1);\r\n                } else {\r\n                    newNo = Array.from({ length: 9 }, (_, i) => (i + 1 >= mcItem.No) ? i + 2 : i + 1);\r\n                }\r\n            }\r\n            updateHaving(id, { ub: newUb, no: newNo });\r\n        } else {\r\n            updateHaving(id, {\r\n                ub: mcItem.Hierarchy - 1,\r\n                no: mcItem.Hierarchy < 6 ? [mcItem.No] : Array.from({ length: mcItem.No }, (_, i) => i + 1)\r\n            });\r\n        }\r\n    };\r\n    const getMCChecked = (seq) => {\r\n        if (!have) { return false; }\r\n        const mcItem = mcInfo[seq];\r\n        return (have.ub > mcItem.Hierarchy - 1) || (have.ub === mcItem.Hierarchy - 1 && have.no.includes(mcItem.No));\r\n    }\r\n\r\n    const handleUbCheck = (e) => {\r\n        const ubSeq = parseInt(e.target.name.split('-').slice(-1));\r\n        if (have && have.ub === ubSeq) {\r\n            updateHaving(id, { ub: ubSeq - 1, no: Array.from({ length: 10 }, (_, i) => i + 1) });\r\n        } else {\r\n            updateHaving(id, { ub: ubSeq, no: [] });\r\n        }\r\n    }\r\n    const getUbChecked = (ubSeq) => {\r\n        if (!have) { return false; }\r\n        return have.ub >= ubSeq;\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {(mcNum > 0) && (\r\n                        <Box className={clsx(classes.mcIcon, mcNum === maxManaCircle && classes.mcIconMaxed)}>{mcNum}</Box>\r\n                    )}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog maxWidth={false} onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Tabs\r\n                    value={mcIdx}\r\n                    onChange={handleTabs}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {mcRanges.map((mcRange, floor) => (\r\n                        <Tab key={floor} classes={{ root: classes.mcTab }} label={`${Math.min(...mcRange)}-${Math.max(...mcRange)}`} id={`mc-tab-${floor}`} aria-controls={`mc-tabpanel-${floor}`} />\r\n                    ))}\r\n                </Tabs>\r\n                {mcRanges.map((mcRange, floor) => (\r\n                    <Box component=\"div\"\r\n                        role=\"tabpanel\"\r\n                        hidden={mcIdx !== floor}\r\n                        id={`mc-tabpanel-${floor}`}\r\n                        aria-labelledby={`mc-tab-${floor}`}\r\n                        value={mcIdx}\r\n                        index={floor}\r\n                        key={floor}\r\n                        dir=\"ltr\"\r\n                        className={clsx(classes.mcTabpanel)}>\r\n                        {(mcIdx === floor) && mcRange.map((seq) => {\r\n                            const mcItem = mcInfo[seq];\r\n                            const mcIcon = MCPieceIcon(entry, mcItem);\r\n                            let ubItem = null;\r\n                            if ([11, 21, 31, 41, 51].includes(seq)) {\r\n                                const ubSeq = Math.floor(seq / 10);\r\n                                const ubIcon = (ubSeq === 5) ? `Mc_Unbind_6M_0${entry.Element}` : 'Mc_Unbind_Mana';\r\n                                ubItem = (\r\n                                    // <React.Fragment>\r\n                                    <Box className={clsx(classes.mcTabUb)} >\r\n                                        <Tooltip title={`Unbind ${ubSeq}`} aria-label={`ub-${ubSeq}`} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                                            <Checkbox\r\n                                                name={`${id}-ub-${ubSeq}`}\r\n                                                onClick={handleUbCheck}\r\n                                                color=\"default\"\r\n                                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                                checked={getUbChecked(ubSeq)}\r\n                                                icon={<img src={`${process.env.PUBLIC_URL}/manacircle/${ubIcon}.png`} alt={`ub-${seq}`} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                                checkedIcon={<img src={`${process.env.PUBLIC_URL}/manacircle/${ubIcon}.png`} alt={`ub-${seq}`} className={clsx(classes.abilityIcon)} />}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                );\r\n                            }\r\n                            const seqMcTxt = `${seq}: ${mcIcon.txt}`;\r\n                            return (\r\n                                <React.Fragment key={seq}>\r\n                                    {ubItem}\r\n                                    <Tooltip title={seqMcTxt} aria-label={seqMcTxt} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                                        <Checkbox\r\n                                            name={`${id}-mc-${seq}`}\r\n                                            onClick={handleMCCheck}\r\n                                            color=\"default\"\r\n                                            classes={{ root: clsx(classes.abilityCheck) }}\r\n                                            checked={getMCChecked(seq)}\r\n                                            icon={<img src={mcIcon.img} alt={`mc-${seq}`} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                            checkedIcon={<img src={mcIcon.img} alt={`mc-${seq}`} className={clsx(classes.abilityIcon)} />}\r\n                                        />\r\n                                    </Tooltip>\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                ))}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function DragonListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid key={i} item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nconst fullWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    if (entry.Passive) {\r\n        have.p = {};\r\n        for (let i of Object.keys(entry.Passive)) {\r\n            have.p[i] = true;\r\n        }\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneWeaponHave = (entry, fullWeapon) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    if (build[5]) {\r\n        const unbindReq = Math.max(build[5].map((b) => b.UnbindReq));\r\n        const have = {\r\n            b: {\r\n                1: unbindReq,\r\n                5: build[5].length,\r\n                6: 1\r\n            }\r\n        }\r\n        if (build[2]) {\r\n            have.b[2] = Math.floor(Math.max(0, unbindReq - 1) / 4);\r\n        }\r\n        if (fullWeapon) {\r\n            have.b[1] = build[1].length;\r\n            have.b[2] = build[2].length;\r\n            have.b[3] = build[3].length;\r\n        }\r\n        return have;\r\n    } else if (!build[6]) {\r\n        // special case for agito\r\n        return fullWeaponHave(entry);\r\n    } else {\r\n        return { b: { 6: 1 } };\r\n    }\r\n}\r\n\r\nconst prereqWeaponHaves = (tempHaving, prereq, prereqHaves) => {\r\n    prereqHaves = prereqHaves || {};\r\n    for (let i of prereq.Create) {\r\n        if (!tempHaving[i]) {\r\n            prereqHaves[i] = { b: { 6: 1 } };\r\n        }\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[i].Prereq, prereqHaves);\r\n    }\r\n    if (prereq.FullUp) {\r\n        prereqHaves[prereq.FullUp] = fullWeaponHave(Weapon[prereq.FullUp]);\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[prereq.FullUp].Prereq, prereqHaves);\r\n    }\r\n    return prereqHaves;\r\n}\r\n\r\nexport function WeaponListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have && have.b[2] && have.b[2] === 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"1\"]}.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"0\"]}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = WeaponBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        // let tempHaving = updateHaving(id, newHave || doneWeaponHave(entry));\r\n        let tempHaving = updateHaving(id, newHave || { b: { 6: 1 } });\r\n        const prereqs = prereqWeaponHaves(tempHaving, entry.Prereq);\r\n        for (let i of Object.keys(prereqs)) {\r\n            tempHaving = updateHaving(i, prereqs[i], tempHaving);\r\n        }\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneWeaponHave(entry, have.b[1] === 5);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            if (have.p) {\r\n                doneHave.p = have.p;\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            let tempHaving = deleteHaving(id);\r\n            for (let i of Object.keys(tempHaving)) {\r\n                const prereqs = prereqWeaponHaves({}, Weapon[i].Prereq);\r\n                if (prereqs[id]) {\r\n                    tempHaving = deleteHaving(i, tempHaving);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        if (piece === '1' && build[5]) {\r\n            have.b[5] = Math.min(have.b[5] || 0, build[5].reduce((acc, cur, idx) => {\r\n                return cur.UnbindReq > value ? acc : (idx + 1);\r\n            }, 0));\r\n        } else if (piece === '2') {\r\n            have.b[1] = Math.min(have.b[1] || 0, (value + 1) * 4);\r\n        } else {\r\n            const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n            have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        }\r\n        if (build[2] && piece !== '2') {\r\n            have.b[2] = Math.max(have.b[2] || 0, Math.floor(Math.max(have.b[1] - 1) / 4));\r\n        }\r\n        if (have.p) {\r\n            for (let p of Object.keys(have.p)) {\r\n                if (entry.Passive[p].UnbindReq > have.b[1]) {\r\n                    have.p[p] = false;\r\n                }\r\n            }\r\n        }\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n    const setAbilityValues = (p, checked, have) => {\r\n        if (!have.p) {\r\n            have.p = {}\r\n        }\r\n        have.p[p] = checked;\r\n        if (checked) {\r\n            have.b[1] = Math.max(have.b[1] || 0, entry.Passive[p].UnbindReq);\r\n        }\r\n        return have;\r\n    }\r\n    const handleAbilityCheck = (e) => {\r\n        const p = e.target.name.split('-').slice(-1);\r\n        const checked = e.target.checked;\r\n        if (have) {\r\n            updateHaving(id, setAbilityValues(p, checked, have));\r\n        } else {\r\n            const newHave = { b: { 6: 1 } };\r\n            createThisHaving(setAbilityValues(p, checked, newHave));\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = WeaponLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (<Box className={clsx(classes.mcIcon, have.b[5] && classes.mcIconMaxed)}>\r\n                        {levelData.Level}\r\n                    </Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography variant=\"overline\" display=\"block\">{WeaponSeries[entry.Series][`Name${locale}`]}</Typography><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes[`Fg${ELEMENTS[entry.Element]}`] || classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n            {entry.Passive && (< DialogContent dividers>\r\n                {Object.keys(entry.Passive).map((p) => {\r\n                    const passive = entry.Passive[p];\r\n                    const abilityName = passive.Ability[`Name${locale}`];\r\n                    const iconPath = `${process.env.PUBLIC_URL}/ability/${passive.Ability.Icon}.png`;\r\n                    return (\r\n                        <Tooltip key={p} title={abilityName} aria-label={abilityName} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                            <Checkbox\r\n                                name={`${id}-passive-${p}`}\r\n                                onClick={handleAbilityCheck}\r\n                                color=\"default\"\r\n                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                checked={!!(have && have.p && have.p[p])}\r\n                                icon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                checkedIcon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon)} />}\r\n                            />\r\n                        </Tooltip>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function MaterialSummaryItem(props) {\r\n    const { m, count, name } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item>\r\n            <Card>\r\n                <CardMedia\r\n                    className={clsx(classes.cardCountIcon)}\r\n                    image={`${process.env.PUBLIC_URL}/material/${m}.png`}\r\n                    title={name} alt={name} >\r\n                </CardMedia>\r\n                <CardContent className={clsx(classes.cardCount)}>\r\n                    <Typography align=\"center\" className={clsx(classes.cardCountText)} display=\"block\">x {count}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const fortMaxNum = (entry) => {\r\n    if (entry.NameEN === 'Rupie Mine') {\r\n        return 4;\r\n    }\r\n    if (entry.NameEN.endsWith('Altar') || entry.NameEN.endsWith('Dojo')) {\r\n        return 2;\r\n    }\r\n    return 1\r\n}\r\n\r\nexport function FortListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have) {\r\n        const maxHave = Math.max(...Object.values(have));\r\n        if (maxHave <= 0) {\r\n            deleteHaving(id);\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n        } else {\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[maxHave - 1].Icon}.png`;\r\n        }\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const maxLv = entry.Detail.length;\r\n    const maxNum = fortMaxNum(entry);\r\n\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, (new Array(maxNum)).fill(maxLv));\r\n        } else {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteHaving(id);\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        } else {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const makeLevelChange = (idx) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                have[idx] = value;\r\n                updateHaving(id, have);\r\n            } else {\r\n                const newHave = (new Array(maxNum)).fill(0);\r\n                newHave[idx] = value;\r\n                updateHaving(id, newHave);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (Object.keys(have).map((key) => (<Box className={clsx(classes.circleIcon, classes[`circleIcon${key}`], (have[key] >= maxLv) && classes.circleIconMaxed)}>{have[key]}</Box>)))}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open} fullWidth={'md'}\r\n        >\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {Array(maxNum).fill(0).map((_, idx) => {\r\n                    const currentLevel = have ? have[idx] : 0;\r\n                    return (\r\n                        <Box key={idx}>\r\n                            <Typography id=\"level-slider\" gutterBottom>\r\n                                {`${cardName} ${(idx + 1)} - Lv.${currentLevel}`}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-level-${idx + 1}`}\r\n                                aria-labelledby=\"level-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={currentLevel}\r\n                                onChange={makeLevelChange(idx)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={maxLv}\r\n                                classes={classes.FgNull}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nconst fullAmuletHave = (entry) => {\r\n    const build = AmuletBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneAmuletHave = (entry, fullCopies) => {\r\n    const doneHave = fullAmuletHave(entry);\r\n    if (!fullCopies) {\r\n        doneHave.b[6] = 1;\r\n    }\r\n    return doneHave;\r\n}\r\n\r\nexport function AmuletListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if ((!entry.NoRefine) && have && have.b[1] && have.b[1] >= 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_02.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_01.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = AmuletBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        updateHaving(id, newHave || { b: { 6: 1 } });\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneAmuletHave(entry, have.b[6] < (build[6].length + 1));\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        // const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n        // have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = AmuletLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (\r\n                        <Box className={clsx(classes.mcIconAmulet, classes.mcIcon, have.b[1] === 4 && have.b[6] === 4 && classes.mcIconMaxed)}>\r\n                            {levelData.Level}</Box>\r\n                    )}\r\n                    <Box className={clsx(classes.amuletAbIcon)}><img alt={entry.AbIcon} src={`${process.env.PUBLIC_URL}/ability/${entry.AbIcon}.png`} /></Box>\r\n                    {entry.Union && (<Box className={clsx(classes.unionIcon)}><img alt={`Union_${entry.Union}`} src={`${process.env.PUBLIC_URL}/ui/${unionIcon(entry.Union)}.png`} /></Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport Chara from '../data/chara.json';\r\nimport ManaCircle from '../data/manacircle.json';\r\nimport CharaLimitBreak from '../data/charalimitbreak.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json';\r\n\r\nimport Amulet from '../data/amulet.json';\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport Fort from '../data/fort.json';\r\nimport Material from '../data/material.json';\r\n\r\nimport { ELEMENTS, WEAPONS, FORMS, unionIcon } from '../data/Mapping';\r\nimport { doneWeaponHave, doneAmuletHave, doneCharaHave, fortMaxNum, MaterialSummaryItem } from './ListingItems';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    costTitle: {\r\n        minHeight: '2.5em',\r\n        '& img': {\r\n            width: 30,\r\n            verticalAlign: 'middle'\r\n        }\r\n    },\r\n    fullToggle: {\r\n        float: \"right\",\r\n        position: \"relative\",\r\n        top: -4\r\n    }\r\n});\r\n\r\n\r\nfunction WeaponMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullAgito, setFullAgito] = React.useState(\"Agito Weapons Maxed\");\r\n    const isFullAgito = fullAgito === \"Agito Weapons Maxed\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullAgito = (event) => {\r\n        if (isFullAgito) {\r\n            setFullAgito(\"Agito Weapon Bonus Only\");\r\n        } else {\r\n            setFullAgito(\"Agito Weapons Maxed\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Weapon[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneWeaponHave(entry, entry.Series === 4 && isFullAgito);\r\n        const build = WeaponBuild[entry.Build];\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6' || doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = WeaponLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0) {\r\n                        totalMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    totalMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let m of Object.keys(entry.Mats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += entry.Mats[m];\r\n            }\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6') { continue; }\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] = doneLevelMats[m];\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullAgito}\r\n                        name=\"fullAgito\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.fullToggle)}\r\n                    >{fullAgito}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction FortMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    let totalTime = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Fort[id];\r\n        const currHave = having[id];\r\n        let currIter = null;\r\n        if (currHave) {\r\n            currIter = Object.values(currHave);\r\n        } else {\r\n            currIter = Array(fortMaxNum(entry)).fill(0);\r\n        }\r\n        for (const curLv of currIter) {\r\n            for (const detail of entry.Detail.slice(curLv)) {\r\n                totalCost += detail.Cost;\r\n                totalTime += detail.Time;\r\n                for (let m of Object.keys(detail.Mats)) {\r\n                    if (!totalMats[m]) { totalMats[m] = 0; }\r\n                    totalMats[m] += detail.Mats[m];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom> {totalCost.toLocaleString()}</Typography>\r\n                    <QueryBuilderIcon style={{ verticalAlign: 'middle', marginLeft: 4 }} />\r\n                    <Typography display=\"inline\" gutterBottom> {totalTime.toLocaleString()}s</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction AmuletMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullCopies, setFullCopies] = React.useState(\"4 Copies\");\r\n    const isFullCopies = fullCopies === \"4 Copies\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullCopies = (event) => {\r\n        if (isFullCopies) {\r\n            setFullCopies(\"1 Copy\");\r\n        } else {\r\n            setFullCopies(\"4 Copies\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Amulet[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneAmuletHave(entry, isFullCopies);\r\n        const build = AmuletBuild[entry.Build];\r\n        const entryMats = {};\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = AmuletLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0) {\r\n                        entryMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    entryMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!entryMats[m]) { entryMats[m] = 0; }\r\n                entryMats[m] += doneLevelMats[m];\r\n            }\r\n        }\r\n        for (let m of Object.keys(entryMats)) {\r\n            const tm = entry[m] ? entry[m] : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"eldwater\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullCopies}\r\n                        name=\"fullCopies\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.fullToggle)}\r\n                    >{fullCopies}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction CharaMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const totalCosts = {Mana: 0, Eldwater: 0};\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const currHave = having[id];\r\n        if (!currHave) { continue; }\r\n        const entry = Chara[id];\r\n        const doneHave = doneCharaHave(entry, 5);\r\n        const mcInfo = ManaCircle[entry.MCName];\r\n        const clbInfo = CharaLimitBreak[entry.LimitBreak];\r\n        const entryMats = {};\r\n\r\n        const useGrow = entry.GrowEnd && Date.now() < entry.GrowEnd;\r\n        if (useGrow) { entryMats['Grow'] = 0; }\r\n        for (let ub = currHave.ub + 1; ub <= doneHave.ub; ub += 1) {\r\n            if (useGrow && clbInfo[ub].Grow){\r\n                entryMats['Grow'] += clbInfo[ub].Grow;\r\n            } else {\r\n                for (let m of Object.keys(clbInfo[ub].Mats)) {\r\n                    if (!entryMats[m]) { entryMats[m] = 0; }\r\n                    entryMats[m] += clbInfo[ub].Mats[m];\r\n                }\r\n            }\r\n        }\r\n\r\n        const calcNodeMats = (n) => {\r\n            const mcItem = mcInfo[n];\r\n            if (useGrow && mcItem.Mats.Grow){\r\n                entryMats['Grow'] += mcItem.Mats.Grow;\r\n            } else {\r\n                totalCosts.Mana += mcItem.Mana;\r\n                for (let m of Object.keys(mcItem.Mats)) {\r\n                    if (!entryMats[m]) { entryMats[m] = 0; }\r\n                    entryMats[m] += mcItem.Mats[m];\r\n                }\r\n                const mcEle = mcItem.Ele[entry.MCEle];\r\n                if (mcEle){\r\n                    totalCosts.Eldwater += mcEle.Eldwater;\r\n                    for (let m of Object.keys(mcEle.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += mcEle.Mats[m];\r\n                    }    \r\n                }\r\n            }\r\n        }\r\n        // mc node mats\r\n        if (currHave.ub === doneHave.ub){\r\n            for (let n of doneHave.no.filter((n) => !(currHave.no.includes(n)))) {\r\n                calcNodeMats(n + doneHave.ub * 10);\r\n            }\r\n        } else {\r\n            for (let n of Array.from({ length: (currHave.ub < 5 ? 10 : 20) }, (_, i) => i + 1).filter((n) => !(currHave.no.includes(n)))) {\r\n                calcNodeMats(n + currHave.ub * 10);\r\n            }\r\n            for (let n = (currHave.ub + 1) * 10; n < doneHave.ub * 10; n += 1) {\r\n                calcNodeMats(n);\r\n            }\r\n            for (let n of doneHave.no) {\r\n                calcNodeMats(n + doneHave.ub * 10);\r\n            }    \r\n        }\r\n\r\n        for (let m of Object.keys(entryMats)) {\r\n            const tm = entry[m] ? entry[m] : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <Typography display=\"inline\" gutterBottom><img src={`${process.env.PUBLIC_URL}/ui/mana.png`} alt=\"mana\" />   {totalCosts.Mana.toLocaleString()}    <img src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"eldwater\" />   {totalCosts.Eldwater.toLocaleString()}</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities, series,\r\n        storeKey, having, visible\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        \"Form\": FORMS,\r\n        \"Union\": [...Array(12).keys()].reduce((res, union) => {\r\n            res[union] = unionIcon(union);\r\n            return res;\r\n        }, {}),\r\n    }\r\n    if (minRarity && maxRarity) {\r\n        radioFilterValues[\"Rarity\"] = [...Array((maxRarity + 1) - minRarity).keys()].reduce((res, offset) => {\r\n            const rarity = minRarity + offset;\r\n            res[rarity] = `${rarity}_Star`;\r\n            return res;\r\n        }, { 0: '0_Star' })\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n    const handleSeries = (e) => {\r\n        let nextSeries = filters.Series || [];\r\n        if (e.target.checked) { nextSeries.push(e.target.name); }\r\n        else {\r\n            const index = nextSeries.indexOf(e.target.name);\r\n            if (index >= 0) { nextSeries.splice(index, 1); }\r\n        }\r\n        if (nextSeries.length === 0) { removeFilter('Series'); }\r\n        else { addFilter('Series', nextSeries); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n    const clearSeries = (e) => { removeFilter('Series'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                {(storeKey === 'chara' || storeKey === 'dragon') && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifMaxed} name=\"ifMaxed\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].MAXED} />\r\n                </Grid>}\r\n                {(storeKey === 'fort') && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotMaxLevel} name=\"ifNotMaxLevel\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].NOT_MAXED} />\r\n                </Grid>}\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                {availabilities && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearAvail}>Clear</Button>\r\n                                {availabilities.map((av) => (\r\n                                    <FormControlLabel key={av}\r\n                                        control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                        label={TextLabel[locale][av] || av} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {series && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].SERIES}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearSeries}>Clear</Button>\r\n                                {Object.keys(series).map((sr) => (\r\n                                    <FormControlLabel key={sr}\r\n                                        control={<Checkbox onChange={handleSeries.bind(this)} name={sr} checked={Boolean(filters.Series && filters.Series.includes(sr))} color=\"primary\" />}\r\n                                        label={series[sr][`Name${locale}`]} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {(storeKey === 'chara') && (<CharaMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'amulet') && (<AmuletMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'weapon') && (<WeaponMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'fort') && (<FortMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\nimport { doneWeaponHave, doneAmuletHave, fortMaxNum } from './ListingItems';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\n\r\nconst weaponSeriesSortOrder = {\r\n    4: -6,\r\n    3: -5,\r\n    5: -4,\r\n    2: -3,\r\n    1: -2,\r\n    6: -1,\r\n}\r\n\r\nconst SortMethods = {\r\n    byID: (entries) => (Object.keys(entries)),\r\n    byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n    byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n    byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n    byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n    byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n    byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    bySeries: (entries) => Object.keys(entries).sort((a, b) => (weaponSeriesSortOrder[entries[a].Series] - weaponSeriesSortOrder[entries[b].Series] || entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    byType: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Type - entries[b].Type || a - b)),\r\n    byForm: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Form - entries[b].Form || entries[a].Rarity - entries[b].Rarity || a - b)),\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifMaxed: (entry, have) => {\r\n        if (have) {\r\n            if (entry.Series !== undefined) {\r\n                const doneHave = doneWeaponHave(entry);\r\n                return Object.keys(doneHave).reduce((acc, cur) => {\r\n                    if (!acc) { return false; }\r\n                    if (!have[cur]) { return false; }\r\n                    return have[cur] >= doneHave[cur];\r\n                })\r\n            } else if (entry.Spiral === undefined) { return have.c >= 5; }\r\n            else { return entry.Spiral ? (have.lv === 100 && have.mc === 70) : have.lv === 80 && have.mc === 50; }\r\n        }\r\n        return false;\r\n    },\r\n    ifNotMaxLevel: (entry, have) => {\r\n        if (have) {\r\n            return entry.Detail.length > Math.min(...Object.values(have));\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const {\r\n        locale, entries, availabilities, series,\r\n        storeKey, cardIconFn, minRarity, maxRarity,\r\n        sortDefault, sortOptions, radioFilters, ItemComponent\r\n    } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        let sortedId = null;\r\n        if (sort === 'byName') {\r\n            sortedId = SortMethods[`byName${locale}`](entries);\r\n        } else {\r\n            sortedId = SortMethods[sort](entries);\r\n        }\r\n        if (order === 'DSC') {\r\n            sortedId = sortedId.reverse();\r\n        }\r\n        return sortedId;\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes, tempHaving) => {\r\n        const newHaving = {\r\n            ...(tempHaving || having),\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n    const deleteHaving = (id, tempHaving) => {\r\n        const newHaving = { ...(tempHaving || having) };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability' || filterType === 'Series') {\r\n            newFilters[filterType] = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            } else if (f === 'Series' && (!filters.Series.includes(entry.Series.toString()))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                if (storeKey === 'weapon') {\r\n                    newHaving[id] = doneWeaponHave(entries[id]);\r\n                } else if (storeKey === 'amulet'){\r\n                    newHaving[id] = doneAmuletHave(entries[id]);\r\n                } else if (storeKey === 'fort') {\r\n                    newHaving[id] = (new Array(fortMaxNum(entries[id]))).fill(entries[id].Detail.length);\r\n                } else if (storeKey === 'chara') {\r\n                    newHaving[id] = {ub: 0, no: []};\r\n                } else {\r\n                    newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n                }\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        let count = visibleHave;\r\n        let total = visibleEntries.length;\r\n        if (storeKey === 'weapon') {\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? (having[id].b[5] ? 1 : 0) : 0)), 0);\r\n            total = visibleEntries.reduce((res, id) => (res + (WeaponBuild[entries[id].Build][5] ? 1 : 0)), 0);\r\n        } else if (storeKey === 'fort') {\r\n            const halidom = having[100101] ? having[100101][0] : 0;\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? Object.values(having[id]).reduce((a, b) => a + b, 0) : 0)), 0) - halidom;\r\n            total = visibleEntries.reduce((res, id) => (res + (fortMaxNum(entries[id]) * entries[id].Detail.length)), 0) - 10;\r\n        }\r\n        const p = ((100 * count / total) >> 0)\r\n        return `${title}: ${count} / ${total} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n                series={series}\r\n                storeKey={storeKey}\r\n                having={having}\r\n                visible={visibleEntries}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, DragonListingItem, WeaponListingItem, FortListingItem, AmuletListingItem, } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\nimport WeaponSeries from './data/weaponseries.json';\r\nimport Fort from './data/fort.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(3)} />\r\n            <Tab label={TextLabel[locale].FACILITY} {...a11yProps(4)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={DragonListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          // cardIconFn={amuletCardIcon}\r\n          minRarity={1}\r\n          maxRarity={3}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Form', 'Union']}\r\n          ItemComponent={AmuletListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          series={WeaponSeries}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'bySeries']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={WeaponListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={4} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Fort}\r\n          storeKey={'fort'}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byType']}\r\n          radioFilters={[]}\r\n          ItemComponent={FortListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}