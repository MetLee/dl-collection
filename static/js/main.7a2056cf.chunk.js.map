{"version":3,"sources":["data/Mapping.js","view/ListingControls.js","view/Listing.js","view/ListingItems.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","ELEMENTS","RARITIES","ELEMENT_COLORS","DEFAULT_HAVE","chara","lv","mc","dragon","c","weapon","amulet","useStyles","makeStyles","root","marginTop","marginBottom","padding","sortSelect","width","radioGroup","display","marginLeft","radioTitle","fontSize","textTransform","radioRoot","margin","radioIcon","height","unchecked","opacity","availButton","maxWidth","availChecks","paddingTop","paddingLeft","paddingRight","ListingControls","props","locale","minRarity","maxRarity","sort","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","classes","handleBoolCheckFilters","e","target","checked","name","radioFilterValues","Object","keys","filter","r","reduce","res","key","handleRadioFilter","value","React","useState","anchorEl","setAnchorEl","open","Boolean","handleAvail","nextAvail","Availability","push","index","indexOf","console","log","splice","length","AppBar","position","color","className","Grid","container","spacing","alignItems","justify","wrap","item","Checkbox","onChange","icon","checkedIcon","FormControl","InputLabel","TextLabel","SORT_BY","Select","select","map","so","MenuItem","slice","toUpperCase","IconButton","onClick","size","FormControlLabel","control","ifHave","bind","this","label","HAVE","ifNotHave","NOT_HAVE","ifMaxed","MAXED","rf","component","FormLabel","disabled","RadioGroup","aria-label","toString","row","v","Radio","alt","clsx","src","process","xs","Button","event","currentTarget","variant","AVAILABILITY","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","includes","SortMethods","ASC","byID","entries","byNameEN","a","b","NameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","Element","Weapon","Rarity","byWeapon","byRarity","DSC","reverse","CheckFilterMethods","entry","have","undefined","Spiral","loadLocalObj","storeKey","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","cardIconFn","sortDefault","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","having","setHaving","updateHaving","id","changes","newHaving","deleteHaving","storeFilterKey","setFilters","visibleEntries","sorted","f","every","visibleHave","nextOrder","filterType","newFilters","parseInt","Typography","gutterBottom","title","p","statLabel","COMPLETION","category","transition","cardIcon","cardIconEditing","cardName","cardNameText","fontWeight","letterSpacing","cardNameNoWrap","whiteSpace","cardEdit","visibility","cardEditEditing","mcIcon","backgroundImage","backgroundRepeat","backgroundSize","textAlign","lineHeight","textShadow","top","left","mcIconMaxed","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","Flame","backgroundColor","Water","Wind","Light","Shadow","Null","BaseListingItem","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","Card","CardActionArea","onContextMenu","CardMedia","image","CardContent","endIcon","replace","insertLinebreak","CardActions","CharaListingItem","setEditing","maxLevel","maxManaCircle","rarity","setRarity","updateRarity","nextHave","setDefaultHave","preventDefault","Fragment","Box","TextField","onInput","level","nextLevel","isNaN","manaCircle","nextMc","standardCardIcon","count","amuletCardIcon","UnbindableListingItem","dh","step","nextC","mub","Math","max","i","COUNT","focus","theme","createMuiTheme","typography","fontFamily","TabPanel","other","role","hidden","aria-labelledby","a11yProps","App","idx","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","Tabs","newIdx","indicatorColor","textColor","scrollButtons","style","Tab","ADVENTURERS","DRAGONS","AMULETS","dir","Chara","Availabilities","Dragon","Amulet","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7a2056cf.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const RARITIES = {\r\n    0: '0_Star',\r\n    1: '1_Star',\r\n    2: '2_Star',\r\n    3: '3_Star',\r\n    4: '4_Star',\r\n    5: '5_Star',\r\n    6: '6_Star',\r\n}\r\n\r\nexport const ELEMENT_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    },\r\n    weapon: {\r\n        2: { c: 5 },\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 5 },\r\n        6: { c: 5 },\r\n    },\r\n    amulet: {\r\n        2: { c: 5 },\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 5 },\r\n        6: { c: 5 },\r\n    }\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport { ELEMENTS, WEAPONS, RARITIES } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    }\r\n});\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        // eslint-disable-next-line\r\n        'Rarity': Object.keys(RARITIES).filter(r => (r == 0 || (r >= minRarity && r <= maxRarity))).reduce((res, key) => { res[key] = RARITIES[key]; return res; }, {})\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            console.log(index);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifMaxed} name=\"ifMaxed\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].MAXED} />\r\n                </Grid>\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                <Grid item xs>\r\n                    <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                    <Popover\r\n                        open={open}\r\n                        anchorEl={anchorEl}\r\n                        onClose={handleClose}\r\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                        transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                        <FormGroup className={classes.availChecks}>\r\n                            <Button onClick={clearAvail}>Clear</Button>\r\n                            {availabilities.map((av) => (\r\n                                <FormControlLabel key={av}\r\n                                    control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                    label={TextLabel[locale][av] || av} />\r\n                            ))}\r\n                        </FormGroup>\r\n                    </Popover>\r\n                </Grid>\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\n\r\nconst SortMethods = {\r\n    ASC: {\r\n        byID: (entries) => (Object.keys(entries)),\r\n        byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n        byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n        byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n        byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n        byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n        byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    },\r\n    DSC: {\r\n        byID: (entries) => (Object.keys(entries).reverse()),\r\n        byNameEN: (entries) => Object.keys(entries).sort((b, a) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n        byNameJP: (entries) => Object.keys(entries).sort((b, a) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n        byNameCN: (entries) => Object.keys(entries).sort((b, a) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n        byElement: (entries) => Object.keys(entries).sort((b, a) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n        byWeapon: (entries) => Object.keys(entries).sort((b, a) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n        byRarity: (entries) => Object.keys(entries).sort((b, a) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    }\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifMaxed: (entry, have) => {\r\n        if (have) {\r\n            if (entry.Spiral === undefined) { return have.c >= 5; }\r\n            else { return entry.Spiral ? (have.lv === 100 && have.mc === 70) : have.lv === 80 && have.mc === 50; }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const { locale, entries, availabilities, storeKey, cardIconFn, minRarity, maxRarity, sortDefault, sortOptions, radioFilters, ItemComponent } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        switch (sort) {\r\n            case 'byName':\r\n                return SortMethods[order][`byName${locale}`](entries);\r\n            default:\r\n                return SortMethods[order][sort](entries);\r\n        }\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes) => {\r\n        const newHaving = {\r\n            ...having,\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n    const deleteHaving = (id) => {\r\n        const newHaving = { ...having };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability') {\r\n            newFilters.Availability = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        const p = ((100 * visibleHave / visibleEntries.length) >> 0)\r\n        return `${title}: ${visibleHave} / ${visibleEntries.length} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport { ELEMENTS, ELEMENT_COLORS, DEFAULT_HAVE } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardName: {\r\n        padding: 0,\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 4\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n\r\n    Flame: { backgroundColor: ELEMENT_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_COLORS.Null }\r\n});\r\n\r\nconst insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const maxLevel = entry.Spiral ? 100 : 80;\r\n    const lv = have ? have.lv : '';\r\n    const validateLv = (e) => {\r\n        const level = parseInt(e.target.value);\r\n        let nextLevel = level;\r\n        if (isNaN(level) || level < 1) { nextLevel = ''; }\r\n        else if (level > maxLevel) { nextLevel = maxLevel; }\r\n        if (nextLevel) {\r\n            if (have) { updateHaving(id, { lv: nextLevel }); }\r\n            else { updateHaving(id, { lv: nextLevel, mc: 1 }); }\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const maxManaCircle = entry.Spiral ? 70 : 50;\r\n    const mc = have ? have.mc : '';\r\n    const validateMc = (e) => {\r\n        const manaCircle = parseInt(e.target.value);\r\n        let nextMc = manaCircle;\r\n        if (isNaN(manaCircle) || manaCircle < 1) { nextMc = ''; }\r\n        else if (manaCircle > maxManaCircle) { nextMc = maxManaCircle; }\r\n        if (nextMc) {\r\n            if (have) { updateHaving(id, { mc: nextMc }); }\r\n            else { updateHaving(id, { lv: 1, mc: nextMc }); }\r\n            updateHaving(id, { mc: nextMc });\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const minRarity = entry.Rarity;\r\n    const [rarity, setRarity] = useState(entry.Rarity);\r\n    const updateRarity = () => {\r\n        if (minRarity === 5) { return; }\r\n        if (minRarity < 5 && (lv > 70 || mc > 40)) { setRarity(5); return; }\r\n        if (minRarity < 4 && (lv > 60 || mc > 30)) { setRarity(4); return; }\r\n        setRarity(minRarity);\r\n    }\r\n\r\n    const setMaxHave = () => {\r\n        setRarity(5);\r\n        const nextHave = { lv: maxLevel, mc: maxManaCircle };\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const setDefaultHave = () => {\r\n        setRarity(minRarity);\r\n        const nextHave = DEFAULT_HAVE.chara[minRarity];\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        if (!have || (have.lv === maxLevel && have.mc === maxManaCircle)) { setDefaultHave(); }\r\n        else { setMaxHave(); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) { setRarity(minRarity); deleteHaving(id); }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => (\r\n        <React.Fragment>\r\n            {(!editing && have ? (have.mc > 0) : false) &&\r\n                <Box className={clsx(classes.mcIcon, have.mc === maxManaCircle && classes.mcIconMaxed)}>{mc}</Box>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={`${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField label=\"Lv\" value={lv} onInput={validateLv.bind(this)} />\r\n        <TextField label=\"MC\" value={mc} onInput={validateMc.bind(this)} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function amuletCardIcon(category, id, count) {\r\n    if (count > 3) { return `${process.env.PUBLIC_URL}/${category}/${id}_02.png`; }\r\n    else { return `${process.env.PUBLIC_URL}/${category}/${id}_01.png`; }\r\n}\r\n\r\nexport function UnbindableListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, UnbindableListingItem, amuletCardIcon } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(3)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          availabilities={Availabilities.Weapon}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          cardIconFn={amuletCardIcon}\r\n          minRarity={2}\r\n          maxRarity={5}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}