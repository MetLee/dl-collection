{"version":3,"sources":["data/Mapping.js","view/ListingItems.js","view/ListingControls.js","view/Listing.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","9","ELEMENTS","RARITIES","ELEMENT_BG_COLORS","ELEMENT_FG_COLORS","DEFAULT_HAVE","chara","lv","mc","dragon","c","amulet","weapon","b","WEAPON_LEVELS","useStyles","makeStyles","root","width","transition","cardIcon","margin","height","cardIconEditing","cardCountIcon","cardName","padding","cardNameText","fontWeight","fontSize","textTransform","letterSpacing","cardCount","marginBottom","cardCountText","cardNameNoWrap","whiteSpace","cardEdit","paddingLeft","paddingRight","visibility","cardEditEditing","mcIcon","backgroundImage","process","backgroundRepeat","backgroundSize","textAlign","lineHeight","color","textShadow","position","top","left","mcIconMaxed","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","dialogIcon","abilityCheckTooltip","abilityCheck","abilityIcon","grayscale","filter","Flame","backgroundColor","Water","Wind","Light","Shadow","Null","FgFlame","FgWater","FgWind","FgLight","FgShadow","FgNull","insertLinebreak","name","locale","replace","BaseListingItem","props","entry","have","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","classes","Grid","item","Card","className","clsx","Element","CardActionArea","onClick","onContextMenu","CardMedia","image","title","alt","CardContent","Button","size","endIcon","CardActions","CharaListingItem","id","updateHaving","deleteHaving","useState","setEditing","maxLevel","Spiral","maxManaCircle","minRarity","Rarity","rarity","setRarity","updateRarity","e","nextHave","setDefaultHave","preventDefault","Fragment","Box","TextField","label","value","onInput","level","parseInt","target","nextLevel","isNaN","bind","this","manaCircle","nextMc","standardCardIcon","category","count","amuletCardIcon","UnbindableListingItem","cardIconFn","dh","step","nextC","mub","r","Math","max","container","justify","map","i","TextLabel","COUNT","focus","fullWeaponHave","build","WeaponBuild","Build","Object","keys","length","Passive","p","doneWeaponHave","unbindReq","UnbindReq","floor","Series","prereqWeaponHaves","tempHaving","prereq","prereqHaves","Create","Weapon","Prereq","FullUp","WeaponListingItem","Skins","React","open","setOpen","handleClose","createThisHaving","newHave","prereqs","deleteThisHaving","setBuildValues","piece","min","reduce","acc","cur","idx","makeBuildChange","setAbilityValues","checked","handleAbilityCheck","split","slice","doneHave","bi","Dialog","onClose","aria-labelledby","DialogTitle","FormControlLabel","control","Checkbox","icon","src","checkedIcon","Typography","variant","display","WeaponSeries","DialogContent","dividers","buildInfo","buildpiece","buildvalue","key","gutterBottom","Slider","valueLabelDisplay","onChange","marks","colorPrimary","passive","abilityName","Ability","iconPath","Icon","Tooltip","aria-label","placement","popper","MaterialSummaryItem","m","align","marginTop","sortSelect","radioGroup","marginLeft","radioTitle","radioRoot","radioIcon","unchecked","opacity","availButton","maxWidth","availChecks","paddingTop","costTitle","minHeight","WeaponMaterialSummation","having","visible","toggleOpen","event","type","totalCost","totalMats","wpn","currHave","bld","bs","Cost","Mats","sorted","sort","a","Material","SortId","MATS","anchor","style","verticalAlign","toLocaleString","spacing","alignItems","wrap","ListingControls","maxRarity","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","series","isGacha","handleBoolCheckFilters","radioFilterValues","res","handleRadioFilter","anchorEl","setAnchorEl","handleClick","currentTarget","Boolean","handleAvail","nextAvail","Availability","push","index","indexOf","splice","handleSeries","nextSeries","AppBar","FormControl","InputLabel","SORT_BY","Select","select","so","MenuItem","toUpperCase","IconButton","ifHave","HAVE","ifNotHave","NOT_HAVE","ifMaxed","MAXED","rf","component","FormLabel","disabled","RadioGroup","toString","row","v","Radio","AVAILABILITY","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","includes","SERIES","sr","weaponSeriesSortOrder","SortMethods","byID","entries","byNameEN","NameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","byWeapon","byRarity","bySeries","CheckFilterMethods","undefined","loadLocalObj","storeKey","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","sortDefault","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","setHaving","changes","newHaving","storeFilterKey","setFilters","visibleEntries","sortedId","reverse","f","every","visibleHave","nextOrder","filterType","newFilters","statLabel","COMPLETION","theme","createMuiTheme","typography","fontFamily","TabPanel","other","role","hidden","a11yProps","App","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","Tabs","newIdx","indicatorColor","textColor","scrollButtons","Tab","ADVENTURERS","DRAGONS","AMULETS","dir","Chara","Availabilities","Dragon","Amulet","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a43803e9.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff',\r\n    9: 'Gun'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const RARITIES = {\r\n    0: '0_Star',\r\n    1: '1_Star',\r\n    2: '2_Star',\r\n    3: '3_Star',\r\n    4: '4_Star',\r\n    5: '5_Star',\r\n    6: '6_Star',\r\n}\r\n\r\nexport const ELEMENT_BG_COLORS = {\r\n    Null: 'rgb(192, 192,192)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const ELEMENT_FG_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(204, 0, 0)',\r\n    Water: 'rgb(0, 51, 204)',\r\n    Wind: 'rgb(0, 153, 0)',\r\n    Light: 'rgb(255,180,0)',\r\n    Shadow: 'rgb(102, 0, 204)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    },\r\n    amulet: {\r\n        2: { c: 5 },\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 5 },\r\n        6: { c: 5 },\r\n    },\r\n    weapon: {\r\n        2: { b: { 6: 1 } },\r\n        3: { b: { 6: 1 } },\r\n        4: { b: { 6: 1 } },\r\n        5: { b: { 6: 1 } },\r\n        6: { b: { 6: 1 } }\r\n    }\r\n}\r\n\r\nexport const WEAPON_LEVELS = {\r\n    2: [6, 7, 8, 9, 10],\r\n    3: [12, 14, 16, 18, 20],\r\n    4: [18, 21, 24, 27, 30],\r\n    5: [30, 35, 40, 45, 50, 55, 60, 65, 70],\r\n    6: [40, 45, 50, 55, 60, 65, 70, 75, 80, 85]\r\n}","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponSeries from '../data/weaponseries.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport { ELEMENTS, ELEMENT_BG_COLORS, ELEMENT_FG_COLORS, DEFAULT_HAVE, WEAPON_LEVELS } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardCountIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 90,\r\n        width: 90\r\n    },\r\n    cardName: {\r\n        padding: '0 !important',\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardCount: {\r\n        padding: '0 !important',\r\n        height: '1em',\r\n        marginBottom: 8,\r\n    },\r\n    cardCountText: {\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        letterSpacing: -1,\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 4\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n    dialogIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    abilityCheckTooltip: {\r\n        top: '10px !important',\r\n        padding: 0,\r\n        fontSize: '1.2em'\r\n    },\r\n    abilityCheck: {\r\n        padding: 0\r\n    },\r\n    abilityIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    grayscale: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    Flame: { backgroundColor: ELEMENT_BG_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_BG_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_BG_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_BG_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_BG_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_BG_COLORS.Null },\r\n    FgFlame: { color: ELEMENT_FG_COLORS.Flame },\r\n    FgWater: { color: ELEMENT_FG_COLORS.Water },\r\n    FgWind: { color: ELEMENT_FG_COLORS.Wind },\r\n    FgLight: { color: ELEMENT_FG_COLORS.Light },\r\n    FgShadow: { color: ELEMENT_FG_COLORS.Shadow },\r\n    FgNull: { color: ELEMENT_FG_COLORS.Null },\r\n});\r\n\r\nexport const insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const maxLevel = entry.Spiral ? 100 : 80;\r\n    const lv = have ? have.lv : '';\r\n    const validateLv = (e) => {\r\n        const level = parseInt(e.target.value);\r\n        let nextLevel = level;\r\n        if (isNaN(level) || level < 1) { nextLevel = ''; }\r\n        else if (level > maxLevel) { nextLevel = maxLevel; }\r\n        if (nextLevel) {\r\n            if (have) { updateHaving(id, { lv: nextLevel }); }\r\n            else { updateHaving(id, { lv: nextLevel, mc: 1 }); }\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const maxManaCircle = entry.Spiral ? 70 : 50;\r\n    const mc = have ? have.mc : '';\r\n    const validateMc = (e) => {\r\n        const manaCircle = parseInt(e.target.value);\r\n        let nextMc = manaCircle;\r\n        if (isNaN(manaCircle) || manaCircle < 1) { nextMc = ''; }\r\n        else if (manaCircle > maxManaCircle) { nextMc = maxManaCircle; }\r\n        if (nextMc) {\r\n            if (have) { updateHaving(id, { mc: nextMc }); }\r\n            else { updateHaving(id, { lv: 1, mc: nextMc }); }\r\n            updateHaving(id, { mc: nextMc });\r\n        } else { deleteHaving(id); }\r\n        updateRarity();\r\n    }\r\n\r\n    const minRarity = entry.Rarity;\r\n    const [rarity, setRarity] = useState(entry.Rarity);\r\n    const updateRarity = () => {\r\n        if (minRarity === 5) { return; }\r\n        if (minRarity < 5 && (lv > 70 || mc > 40)) { setRarity(5); return; }\r\n        if (minRarity < 4 && (lv > 60 || mc > 30)) { setRarity(4); return; }\r\n        setRarity(minRarity);\r\n    }\r\n\r\n    const setMaxHave = () => {\r\n        setRarity(5);\r\n        const nextHave = { lv: maxLevel, mc: maxManaCircle };\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const setDefaultHave = () => {\r\n        setRarity(minRarity);\r\n        const nextHave = DEFAULT_HAVE.chara[minRarity];\r\n        updateHaving(id, nextHave);\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        if (!have || (have.lv === maxLevel && have.mc === maxManaCircle)) { setDefaultHave(); }\r\n        else { setMaxHave(); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) { setRarity(minRarity); deleteHaving(id); }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => (\r\n        <React.Fragment>\r\n            {(!editing && have ? (have.mc > 0) : false) &&\r\n                <Box className={clsx(classes.mcIcon, have.mc === maxManaCircle && classes.mcIconMaxed)}>{mc}</Box>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={`${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField label=\"Lv\" value={lv} onInput={validateLv.bind(this)} />\r\n        <TextField label=\"MC\" value={mc} onInput={validateMc.bind(this)} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function amuletCardIcon(category, id, count) {\r\n    if (count > 3) { return `${process.env.PUBLIC_URL}/${category}/${id}_02.png`; }\r\n    else { return `${process.env.PUBLIC_URL}/${category}/${id}_01.png`; }\r\n}\r\n\r\nexport function UnbindableListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nconst fullWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    if (entry.Passive) {\r\n        have.p = {};\r\n        for (let i of Object.keys(entry.Passive)) {\r\n            have.p[i] = true;\r\n        }\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    if (build[5]) {\r\n        const unbindReq = Math.max(build[5].map((b) => b.UnbindReq));\r\n        const have = {\r\n            b: {\r\n                1: unbindReq,\r\n                5: build[5].length,\r\n                6: 1\r\n            }\r\n        }\r\n        if (build[2]) {\r\n            have.b[2] = Math.floor(Math.max(0, unbindReq - 1) / 4);\r\n        }\r\n        if (entry.Series === 4) {\r\n            have.b[1] = build[1].length;\r\n            have.b[2] = build[2].length;\r\n            have.b[3] = build[3].length;\r\n        }\r\n        return have;\r\n    } else if (!build[6]) {\r\n        // special case for agito\r\n        return fullWeaponHave(entry);\r\n    } else {\r\n        return { b: { 6: 1 } };\r\n    }\r\n}\r\n\r\nconst prereqWeaponHaves = (tempHaving, prereq, prereqHaves) => {\r\n    prereqHaves = prereqHaves || {};\r\n    for (let i of prereq.Create) {\r\n        if (!tempHaving[i]) {\r\n            prereqHaves[i] = { b: { 6: 1 } };\r\n        }\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[i].Prereq, prereqHaves);\r\n    }\r\n    if (prereq.FullUp) {\r\n        prereqHaves[prereq.FullUp] = fullWeaponHave(Weapon[prereq.FullUp]);\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[prereq.FullUp].Prereq, prereqHaves);\r\n    }\r\n    return prereqHaves;\r\n}\r\n\r\nexport function WeaponListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have && have.b[2] && have.b[2] === 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"1\"]}.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"0\"]}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = WeaponBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        // let tempHaving = updateHaving(id, newHave || doneWeaponHave(entry));\r\n        let tempHaving = updateHaving(id, newHave || { b: { 6: 1 } });\r\n        const prereqs = prereqWeaponHaves(tempHaving, entry.Prereq);\r\n        for (let i of Object.keys(prereqs)) {\r\n            tempHaving = updateHaving(i, prereqs[i], tempHaving);\r\n        }\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneWeaponHave(entry);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            if (have.p) {\r\n                doneHave.p = have.p;\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            let tempHaving = deleteHaving(id);\r\n            for (let i of Object.keys(tempHaving)) {\r\n                const prereqs = prereqWeaponHaves({}, Weapon[i].Prereq);\r\n                if (prereqs[id]) {\r\n                    tempHaving = deleteHaving(i, tempHaving);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        if (piece === '1' && build[5]) {\r\n            have.b[5] = Math.min(have.b[5] || 0, build[5].reduce((acc, cur, idx) => {\r\n                return cur.UnbindReq > value ? acc : (idx + 1);\r\n            }, 0));\r\n        } else if (piece === '2') {\r\n            have.b[1] = Math.min(have.b[1] || 0, (value + 1) * 4);\r\n        } else {\r\n            const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n            have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        }\r\n        if (build[2] && piece !== '2') {\r\n            have.b[2] = Math.max(have.b[2] || 0, Math.floor(Math.max(have.b[1] - 1) / 4));\r\n        }\r\n        if (have.p) {\r\n            for (let p of Object.keys(have.p)) {\r\n                if (entry.Passive[p].UnbindReq > have.b[1]) {\r\n                    have.p[p] = false;\r\n                }\r\n            }\r\n        }\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n    const setAbilityValues = (p, checked, have) => {\r\n        if (!have.p) {\r\n            have.p = {}\r\n        }\r\n        have.p[p] = checked;\r\n        if (checked) {\r\n            have.b[1] = Math.max(have.b[1] || 0, entry.Passive[p].UnbindReq);\r\n        }\r\n        return have;\r\n    }\r\n    const handleAbilityCheck = (e) => {\r\n        const p = e.target.name.split('-').slice(-1);\r\n        const checked = e.target.checked;\r\n        if (have) {\r\n            updateHaving(id, setAbilityValues(p, checked, have));\r\n        } else {\r\n            const newHave = { b: { 6: 1 } };\r\n            createThisHaving(setAbilityValues(p, checked, newHave));\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (<Box className={clsx(classes.mcIcon, have.b[5] && classes.mcIconMaxed)}>\r\n                        {WEAPON_LEVELS[entry.Rarity][have.b[1] || 0]}\r\n                    </Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography variant=\"overline\" display=\"block\">{WeaponSeries[entry.Series][`Name${locale}`]}</Typography><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes[`Fg${ELEMENTS[entry.Element]}`] || classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n            {entry.Passive && (< DialogContent dividers>\r\n                {Object.keys(entry.Passive).map((p) => {\r\n                    const passive = entry.Passive[p];\r\n                    const abilityName = passive.Ability[`Name${locale}`];\r\n                    const iconPath = `${process.env.PUBLIC_URL}/ability/${passive.Ability.Icon}.png`;\r\n                    return (\r\n                        <Tooltip key={p} title={abilityName} aria-label={abilityName} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                            <Checkbox\r\n                                name={`${id}-passive-${p}`}\r\n                                onClick={handleAbilityCheck}\r\n                                color=\"default\"\r\n                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                checked={!!(have && have.p && have.p[p])}\r\n                                icon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                checkedIcon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon)} />}\r\n                            />\r\n                        </Tooltip>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function MaterialSummaryItem(props) {\r\n    const { m, count, name } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item>\r\n            <Card>\r\n                <CardMedia\r\n                    className={clsx(classes.cardCountIcon)}\r\n                    image={`${process.env.PUBLIC_URL}/material/${m}.png`}\r\n                    title={name} alt={name} >\r\n                </CardMedia>\r\n                <CardContent className={clsx(classes.cardCount)}>\r\n                    <Typography align=\"center\" className={clsx(classes.cardCountText)} display=\"block\">x {count}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\n\r\nimport TextLabel from '../data/locale.json';\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport Material from '../data/material.json';\r\nimport { ELEMENTS, WEAPONS, RARITIES } from '../data/Mapping';\r\nimport { doneWeaponHave, MaterialSummaryItem } from './ListingItems';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    costTitle: {\r\n        minHeight: '2.5em'\r\n    }\r\n});\r\n\r\n\r\nfunction WeaponMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    // maybe come bacc and count up passive ability mats too :v\r\n    for (let id of visible) {\r\n        const wpn = Weapon[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneWeaponHave(wpn);\r\n        const bld = WeaponBuild[wpn.Build];\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6' || doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of bld[bi].slice(currHave.b[bi] ? currHave.b[bi] - 1 : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += wpn.Cost;\r\n            for (let m of Object.keys(wpn.Mats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += wpn.Mats[m];\r\n            }\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6') { continue; }\r\n                for (const bs of bld[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img style={{ verticalAlign: 'middle' }} src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities, series, having, visible, isGacha\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        // eslint-disable-next-line\r\n        'Rarity': Object.keys(RARITIES).filter(r => (r == 0 || (r >= minRarity && r <= maxRarity))).reduce((res, key) => { res[key] = RARITIES[key]; return res; }, {})\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n    const handleSeries = (e) => {\r\n        let nextSeries = filters.Series || [];\r\n        if (e.target.checked) { nextSeries.push(e.target.name); }\r\n        else {\r\n            const index = nextSeries.indexOf(e.target.name);\r\n            if (index >= 0) { nextSeries.splice(index, 1); }\r\n        }\r\n        if (nextSeries.length === 0) { removeFilter('Series'); }\r\n        else { addFilter('Series', nextSeries); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n    const clearSeries = (e) => { removeFilter('Series'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                {isGacha && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifMaxed} name=\"ifMaxed\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].MAXED} />\r\n                </Grid>}\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                {availabilities && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearAvail}>Clear</Button>\r\n                                {availabilities.map((av) => (\r\n                                    <FormControlLabel key={av}\r\n                                        control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                        label={TextLabel[locale][av] || av} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {series && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].SERIES}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearSeries}>Clear</Button>\r\n                                {Object.keys(series).map((sr) => (\r\n                                    <FormControlLabel key={sr}\r\n                                        control={<Checkbox onChange={handleSeries.bind(this)} name={sr} checked={Boolean(filters.Series && filters.Series.includes(sr))} color=\"primary\" />}\r\n                                        label={series[sr][`Name${locale}`]} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {having && (<WeaponMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\nimport { doneWeaponHave } from './ListingItems';\r\n\r\nconst weaponSeriesSortOrder = {\r\n    4: -6,\r\n    3: -5,\r\n    5: -4,\r\n    2: -3,\r\n    1: -2,\r\n    6: -1,\r\n}\r\n\r\nconst SortMethods = {\r\n    byID: (entries) => (Object.keys(entries)),\r\n    byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n    byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n    byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n    byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity)),\r\n    byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity)),\r\n    byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    bySeries: (entries) => Object.keys(entries).sort((a, b) => (weaponSeriesSortOrder[entries[a].Series] - weaponSeriesSortOrder[entries[b].Series] || entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifMaxed: (entry, have) => {\r\n        if (have) {\r\n            if (entry.Series !== undefined) {\r\n                const doneHave = doneWeaponHave(entry);\r\n                return Object.keys(doneHave).reduce((acc, cur) => {\r\n                    if (!acc) { return false; }\r\n                    if (!have[cur]) { return false; }\r\n                    return have[cur] >= doneHave[cur];\r\n                })\r\n            } else if (entry.Spiral === undefined) { return have.c >= 5; }\r\n            else { return entry.Spiral ? (have.lv === 100 && have.mc === 70) : have.lv === 80 && have.mc === 50; }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const {\r\n        locale, entries, availabilities, series,\r\n        storeKey, cardIconFn, minRarity, maxRarity,\r\n        sortDefault, sortOptions, radioFilters, ItemComponent\r\n    } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        let sortedId = null;\r\n        if (sort === 'byName') {\r\n            sortedId = SortMethods[`byName${locale}`](entries);\r\n        } else {\r\n            sortedId = SortMethods[sort](entries);\r\n        }\r\n        if (order === 'DSC') {\r\n            sortedId = sortedId.reverse();\r\n        }\r\n        return sortedId;\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes, tempHaving) => {\r\n        const newHaving = {\r\n            ...(tempHaving || having),\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n    const deleteHaving = (id, tempHaving) => {\r\n        const newHaving = { ...(tempHaving || having) };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability' || filterType === 'Series') {\r\n            newFilters[filterType] = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            } else if (f === 'Series' && (!filters.Series.includes(entry.Series.toString()))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                if (storeKey === 'weapon') {\r\n                    newHaving[id] = doneWeaponHave(entries[id]);\r\n                } else {\r\n                    newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n                }\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        const p = ((100 * visibleHave / visibleEntries.length) >> 0)\r\n        return `${title}: ${visibleHave} / ${visibleEntries.length} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n                series={series}\r\n                having={storeKey === 'weapon' && having}\r\n                visible={visibleEntries}\r\n                isGacha={storeKey === 'chara' || storeKey === 'dragon'}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, UnbindableListingItem, WeaponListingItem, amuletCardIcon } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\nimport WeaponSeries from './data/weaponseries.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(3)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          cardIconFn={amuletCardIcon}\r\n          minRarity={2}\r\n          maxRarity={5}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Rarity']}\r\n          ItemComponent={UnbindableListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          // availabilities={Object.keys(WeaponSeries).map((i) => WeaponSeries[i][`Name${locale}`])}\r\n          series={WeaponSeries}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'bySeries']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={WeaponListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}