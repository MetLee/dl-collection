{"version":3,"sources":["views/IconCheckList.js","views/Adventurers.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","iconCheckList","iconCheck","display","iconCB","maxWidth","maxHeight","width","props","iconSize","height","position","cursor","transitionDuration","transformOrigin","backgroundColor","color","content","borderRadius","border","top","left","lineHeight","textAlign","transform","opacity","zIndex","IconCheckList","classes","className","Object","keys","iconList","map","name","nameKey","prefix","key","type","id","onChange","updateState","checked","checkState","clsx","element","htmlFor","src","title","alt","initHaving","Adventurers","forEach","ele","rare","adv","elementGroup","headerLabel","fontSize","AdventurerList","useState","having","setHaving","updateHaving","e","target","checkHaving","have","reduce","acc","cur","total","length","FormControlLabel","label","control","Checkbox","newHaving","k","Math","floor","Fragment","Divider","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3eae977.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles({\r\n    iconCheckList: {},\r\n    iconCheck: {\r\n        display: 'inline-block',\r\n    },\r\n    iconCB: {\r\n        display: 'none',\r\n        '& + label': {\r\n            maxWidth: '18vw',\r\n            maxHeight: '18vw',\r\n            width: props => `${props.iconSize}px`,\r\n            height: props => `${props.iconSize}px`,\r\n            display: 'block',\r\n            position: 'relative',\r\n            cursor: 'pointer',\r\n            '& > img': {\r\n                width: '100%',\r\n                height: '100%',\r\n                transitionDuration: '0.1s',\r\n                transformOrigin: '50% 50%'\r\n            },\r\n            '&:before': {\r\n                backgroundColor: 'white',\r\n                color: 'white',\r\n                content: '\" \"',\r\n                display: 'block',\r\n                borderRadius: '50%',\r\n                border: '0.05em solid white',\r\n                position: 'absolute',\r\n                top: '-0.25em',\r\n                left: '-0.25em',\r\n                width: '1.1em',\r\n                height: '1.1em',\r\n                lineHeight: '1.1em',\r\n                textAlign: 'center',\r\n                transitionDuration: '0.4s',\r\n                transform: 'scale(0)'\r\n            }\r\n        },\r\n        '&:checked': {\r\n            '& + label': {\r\n                '& > img': {\r\n                    transform: 'scale(0.9)',\r\n                    opacity: 0.5,\r\n                },\r\n                '&:before': {\r\n                    content: '\"âœ“\"',\r\n                    transform: 'scale(1)',\r\n                    zIndex: 2\r\n                },\r\n                '&.Flame': {\r\n                    '&:before': { backgroundColor: 'salmon' },\r\n                    '& > img': { backgroundColor: 'salmon' },\r\n                },\r\n                '&.Water': {\r\n                    '&:before': { backgroundColor: 'deepskyblue' },\r\n                    '& > img': { backgroundColor: 'deepskyblue' },\r\n                },\r\n                '&.Wind': {\r\n                    '&:before': { backgroundColor: 'lightgreen' },\r\n                    '& > img': { backgroundColor: 'lightgreen' },\r\n                },\r\n                '&.Light': {\r\n                    '&:before': { backgroundColor: 'khaki' },\r\n                    '& > img': { backgroundColor: 'khaki' },\r\n                },\r\n                '&.Dark': {\r\n                    '&:before': { backgroundColor: 'mediumpurple' },\r\n                    '& > img': { backgroundColor: 'mediumpurple' },\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default function IconCheckList(props) {\r\n    const classes = useStyles({ iconSize: 80 });\r\n    return (<div className={classes.iconCheckList}>\r\n        {Object.keys(props.iconList).map(name => {\r\n            const nameKey = `${props.prefix}-${name}`;\r\n            return (\r\n                <div className={classes.iconCheck} key={nameKey}>\r\n                    <input type=\"checkbox\" className={classes.iconCB} id={nameKey} name={name} onChange={props.updateState} checked={props.checkState(name)} />\r\n                    <label className={clsx(props.element, props.iconList[name])} htmlFor={nameKey}><img src={`${props.prefix}/${name}.png`} title={name} alt={name} /></label>\r\n                </div>\r\n            );\r\n        })}\r\n    </div>);\r\n}","import React, { useState } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Adventurers from '../data/Adventurers.json';\r\nimport IconCheckList from './IconCheckList';\r\n\r\nlet initHaving = {};\r\nObject.keys(Adventurers).forEach(ele => {\r\n    Object.keys(Adventurers[ele]).forEach(rare => {\r\n        Object.keys(Adventurers[ele][rare]).forEach(adv => {\r\n            initHaving[adv] = false;\r\n        })\r\n    })\r\n});\r\nconst useStyles = makeStyles({\r\n    elementGroup: {},\r\n    headerLabel: {\r\n        fontSize: '2em'\r\n    }\r\n});\r\nexport default function AdventurerList() {\r\n    const [having, setHaving] = useState(initHaving);\r\n    const classes = useStyles();\r\n\r\n    const updateHaving = e => {\r\n        setHaving({\r\n            ...having,\r\n            [e.target.name]: !having[e.target.name]\r\n        });\r\n    }\r\n\r\n    const checkHaving = name => {\r\n        return having[name];\r\n    }\r\n\r\n    const toggleAll = (e) => {\r\n        const newHaving = {};\r\n        Object.keys(having).forEach(k => {\r\n            newHaving[k] = e.target.checked;\r\n        });\r\n        setHaving(newHaving);\r\n    }\r\n\r\n    const countHaving = () => {\r\n        return Object.keys(having).reduce((acc, cur) => {\r\n            if (having[cur] === true) {\r\n                return acc + 1;\r\n            } else {\r\n                return acc;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    const have = countHaving();\r\n    const total = Object.keys(having).length;\r\n\r\n    return (\r\n        <div>\r\n            <FormControlLabel classes={{ label: classes.headerLabel }}\r\n                control={<Checkbox onChange={toggleAll} color=\"default\" />}\r\n                label={`Adventurers: ${have} / ${total} (${Math.floor((have / total) * 100)}%)`}\r\n            />\r\n            <div id=\"adventurerList\">\r\n                {Object.keys(Adventurers).map(ele => {\r\n                    return (\r\n                        <React.Fragment key={`advList-${ele}`}>\r\n                            <Divider />\r\n                            <div className={classes.elementGroup}>\r\n                                {Object.keys(Adventurers[ele]).map(rare => {\r\n                                    return (<IconCheckList\r\n                                        iconList={Adventurers[ele][rare]}\r\n                                        prefix='adv'\r\n                                        element={ele}\r\n                                        updateState={updateHaving}\r\n                                        checkState={checkHaving}\r\n                                    />);\r\n                                })}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport AdventurerList from './views/Adventurers';\r\n\r\nfunction App() {\r\n  return <AdventurerList />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}