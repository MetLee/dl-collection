{"version":3,"sources":["views/Collection.js","views/IconList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","elementGroup","headerLabel","fontSize","headerButton","marginRight","fontWeight","CollectionList","props","collection","setCollection","maxHaving","collectionItems","IconListComponent","prefix","itemType","defaultRarity","nextRarity","rarityToString","useState","rarity","filters","setFilters","checked","setChecked","classes","updateHaving","e","target","name","checkHaving","countHaving","acc","Object","keys","forEach","ele","rare","item","countItems","have","total","haveMub","Math","floor","countMubHaving","statsLabel","String","fromCharCode","Grid","container","spacing","alignItems","xs","sm","Button","size","className","onClick","newRarity","color","fullWidth","FormControlLabel","label","control","Checkbox","onChange","newHaving","newValue","min","map","Fragment","key","Divider","iconList","element","updateState","checkState","iconCheckList","iconCheck","display","iconCB","maxWidth","maxHeight","width","iconSize","height","position","cursor","transitionDuration","transformOrigin","backgroundColor","beforeColor","content","borderRadius","beforeShape","border","beforeSize","left","top","lineHeight","textAlign","transform","opacity","zIndex","IconCheckList","nameKey","type","id","Boolean","clsx","htmlFor","data-before","src","title","alt","unbindStr","n","black","white","mub","ub","max","unbindDiamonds","repeat","IconCounterList","TabPanel","children","value","index","other","Typography","component","role","hidden","aria-labelledby","Box","p","initiateCollection","initialValue","initHaving","adv","a11yProps","App","Adventurers","d","Dragons","collect","setCollect","idx","setIdx","AppBar","Tabs","newIdx","indicatorColor","textColor","variant","Tab","dir","c","r","length","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b81db42.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    elementGroup: {},\r\n    headerLabel: {\r\n        fontSize: '1.5em'\r\n    },\r\n    headerButton: {\r\n        marginRight: '2em',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\nexport default function CollectionList(props) {\r\n    const { collection, setCollection, maxHaving, collectionItems, IconListComponent, prefix, itemType, defaultRarity, nextRarity, rarityToString } = props;\r\n    const [filters, setFilters] = useState({\r\n        rarity: defaultRarity\r\n    });\r\n    const [checked, setChecked] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const updateHaving = e => {\r\n        if (maxHaving <= collection[e.target.name]) {\r\n            setCollection({ [e.target.name]: 0 });\r\n        } else {\r\n            setCollection({ [e.target.name]: collection[e.target.name] + 1 });\r\n        }\r\n    }\r\n\r\n    const checkHaving = name => {\r\n        return collection[name];\r\n    }\r\n\r\n    const toggleAll = (e) => {\r\n        const newHaving = {};\r\n        const newValue = !checked ? Math.min(maxHaving, 5) : 0;\r\n        Object.keys(collectionItems).forEach(ele => {\r\n            filters.rarity.forEach(rare => {\r\n                Object.keys(collectionItems[ele][rare]).forEach(item => {\r\n                    newHaving[item] = newValue;\r\n                });\r\n            });\r\n        });\r\n        setCollection(newHaving);\r\n        setChecked(!checked);\r\n    }\r\n\r\n    const countHaving = (rarity) => {\r\n        let acc = 0;\r\n        Object.keys(collectionItems).forEach(ele => {\r\n            rarity.forEach(rare => {\r\n                Object.keys(collectionItems[ele][rare]).forEach(item => {\r\n                    if (collection[item] > 0) {\r\n                        acc += 1;\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        return acc;\r\n    }\r\n\r\n    const countMubHaving = (rarity) => {\r\n        let acc = 0;\r\n        Object.keys(collectionItems).forEach(ele => {\r\n            rarity.forEach(rare => {\r\n                Object.keys(collectionItems[ele][rare]).forEach(item => {\r\n                    acc += Math.floor(collection[item] / 5);\r\n                })\r\n            })\r\n        });\r\n        return acc;\r\n    }\r\n\r\n    const countItems = (rarity) => {\r\n        let acc = 0;\r\n        Object.keys(collectionItems).forEach(ele => {\r\n            rarity.forEach(rare => {\r\n                Object.keys(collectionItems[ele][rare]).forEach(item => {\r\n                    acc += 1;\r\n                })\r\n            })\r\n        });\r\n        return acc;\r\n    }\r\n\r\n    const toggleRarity = (e) => {\r\n        const newRarity = nextRarity(filters.rarity);\r\n        setFilters({\r\n            ...filters,\r\n            rarity: newRarity\r\n        });\r\n        setChecked(countHaving(newRarity) > countItems(newRarity) / 2);\r\n    }\r\n\r\n    const have = countHaving(filters.rarity);\r\n    const total = countItems(filters.rarity);\r\n    const haveMub = countMubHaving(filters.rarity);\r\n\r\n    let statsLabel = `${itemType}: ${have} / ${total} (${Math.floor((have / total) * 100)}%)`;\r\n    if (haveMub > 0) {\r\n        statsLabel += ' [' + String.fromCharCode(10070) + `${haveMub}]`\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0} alignItems=\"flex-start\">\r\n                <Grid item xs={12} sm={1}>\r\n                    <Button size=\"large\" className={classes.headerButton} onClick={toggleRarity} color=\"default\" fullWidth={true}>\r\n                        {rarityToString(filters.rarity)}</Button>\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                    <FormControlLabel\r\n                        classes={{ label: classes.headerLabel }}\r\n                        control={<Checkbox onChange={toggleAll} checked={checked} color=\"default\" />}\r\n                        label={statsLabel}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <div className=\"collectionList\">\r\n                {Object.keys(collectionItems).map(ele => {\r\n                    return (\r\n                        <React.Fragment key={`${prefix}List-${ele}`}>\r\n                            <Divider />\r\n                            <div className={classes.elementGroup}>\r\n                                {filters.rarity.map(rare => {\r\n                                    return (<IconListComponent\r\n                                        key={`${prefix}List-${ele}-${rare}`}\r\n                                        iconList={collectionItems[ele][rare]}\r\n                                        prefix={prefix}\r\n                                        element={ele}\r\n                                        updateState={updateHaving}\r\n                                        checkState={checkHaving}\r\n                                    />);\r\n                                })}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles({\r\n    iconCheckList: {},\r\n    iconCheck: {\r\n        display: 'inline-block',\r\n    },\r\n    iconCB: {\r\n        display: 'none',\r\n        '& + label': {\r\n            maxWidth: '18vw',\r\n            maxHeight: '18vw',\r\n            width: props => `${props.iconSize}px`,\r\n            height: props => `${props.iconSize}px`,\r\n            display: 'block',\r\n            position: 'relative',\r\n            cursor: 'pointer',\r\n            '& > img': {\r\n                width: '100%',\r\n                height: '100%',\r\n                transitionDuration: '0.1s',\r\n                transformOrigin: '50% 50%'\r\n            },\r\n            '&:before': {\r\n                backgroundColor: props => props.beforeColor,\r\n                color: props => props.beforeColor,\r\n                content: '\" \"',\r\n                display: 'block',\r\n                borderRadius: props => props.beforeShape === 'circle' ? '50%' : '0%',\r\n                border: props => `0.05em solid ${props.beforeColor}`,\r\n                position: 'absolute',\r\n                width: props => `${props.beforeSize}em`,\r\n                left: props => props.beforeShape === 'circle' ? `${- props.beforeSize / 5}em` : '-0.25em',\r\n                top: props => props.beforeShape === 'circle' ? `${- props.beforeSize / 5}em` : '-0.25em',\r\n                height: props => props.beforeShape === 'circle' ? `${props.beforeSize}em` : '1.25em',\r\n                lineHeight: props => props.beforeShape === 'circle' ? `${props.beforeSize}em` : '1.25em',\r\n                textAlign: 'center',\r\n                transitionDuration: '0.4s',\r\n                transform: 'scale(0)'\r\n            }\r\n        },\r\n        '&:checked': {\r\n            '& + label': {\r\n                '& > img': {\r\n                    transform: 'scale(0.9)',\r\n                    opacity: 0.5,\r\n                },\r\n                '&:before': {\r\n                    content: 'attr(data-before)',\r\n                    transform: 'scale(1)',\r\n                    zIndex: 2\r\n                },\r\n                '&.Flame': {\r\n                    '&:before': { backgroundColor: 'salmon' },\r\n                    '& > img': { backgroundColor: 'salmon' },\r\n                },\r\n                '&.Water': {\r\n                    '&:before': { backgroundColor: 'deepskyblue' },\r\n                    '& > img': { backgroundColor: 'deepskyblue' },\r\n                },\r\n                '&.Wind': {\r\n                    '&:before': { backgroundColor: 'lightgreen' },\r\n                    '& > img': { backgroundColor: 'lightgreen' },\r\n                },\r\n                '&.Light': {\r\n                    '&:before': { backgroundColor: 'khaki' },\r\n                    '& > img': { backgroundColor: 'khaki' },\r\n                },\r\n                '&.Shadow': {\r\n                    '&:before': { backgroundColor: 'mediumpurple' },\r\n                    '& > img': { backgroundColor: 'mediumpurple' },\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport function IconCheckList(props) {\r\n    const classes = useStyles({ iconSize: 80, beforeSize: 1.2, beforeShape: 'circle', beforeColor: 'white' });\r\n    return (<div className={classes.iconCheckList}>\r\n        {Object.keys(props.iconList).map(name => {\r\n            const nameKey = `${props.prefix}-${name}`;\r\n            return (\r\n                <div className={classes.iconCheck} key={nameKey}>\r\n                    <input type=\"checkbox\" className={classes.iconCB} id={nameKey} name={name} onChange={props.updateState} checked={Boolean(props.checkState(name))} />\r\n                    <label className={clsx(props.element, props.iconList[name])} htmlFor={nameKey} data-before=\"✓\" >\r\n                        <img src={`${props.prefix}/${name}.png`} title={name} alt={name} />\r\n                    </label>\r\n                </div>\r\n            );\r\n        })}\r\n    </div>);\r\n}\r\n\r\nfunction unbindStr(n) {\r\n    const black = String.fromCharCode(9642)\r\n    const white = String.fromCharCode(9643)\r\n    const mub = Math.floor(n / 5)\r\n    const ub = Math.max((n - 1) % 5, 0)\r\n    const unbindDiamonds = black.repeat(ub) + white.repeat(4 - ub);\r\n    if (n >= 5) {\r\n        if (ub === 4) {\r\n            return `${mub}` + String.fromCharCode(10070);\r\n        }\r\n        return `${mub}` + String.fromCharCode(10070) + unbindDiamonds;\r\n    } else {\r\n        return unbindDiamonds;\r\n    }\r\n}\r\nexport function IconCounterList(props) {\r\n    const classes = useStyles({ iconSize: 80, beforeSize: 3, beforeColor: 'black' });\r\n    return (<div className={classes.iconCheckList}>\r\n        {Object.keys(props.iconList).map(name => {\r\n            const nameKey = `${props.prefix}-${name}`;\r\n            return (\r\n                <div className={classes.iconCheck} key={nameKey}>\r\n                    <input type=\"checkbox\" className={classes.iconCB} id={nameKey} name={name} onChange={props.updateState} checked={Boolean(props.checkState(name))} />\r\n                    <label className={clsx(props.element, props.iconList[name])} htmlFor={nameKey} data-before={unbindStr(props.checkState(name))}>\r\n                        <img src={`${props.prefix}/${name}.png`} title={name} alt={name} />\r\n                    </label>\r\n                </div>\r\n            );\r\n        })}\r\n    </div>);\r\n}","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CollectionList from './views/Collection';\r\nimport { IconCheckList, IconCounterList } from './views/IconList';\r\nimport Adventurers from './data/Adventurers.json';\r\nimport Dragons from './data/Dragons.json';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction initiateCollection(collectionItems, initialValue) {\r\n  let initHaving = {};\r\n  Object.keys(collectionItems).forEach(ele => {\r\n    Object.keys(collectionItems[ele]).forEach(rare => {\r\n      Object.keys(collectionItems[ele][rare]).forEach(adv => {\r\n        initHaving[adv] = initialValue;\r\n      })\r\n    })\r\n  });\r\n  return initHaving;\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction App() {\r\n  const [collect, setCollect] = useState({\r\n    adv: initiateCollection(Adventurers, 0),\r\n    d: initiateCollection(Dragons, 0)\r\n  });\r\n  const [idx, setIdx] = useState(0);\r\n  const handleChange = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n  };\r\n\r\n  const setAdvCollection = c => {\r\n    setCollect({\r\n      ...collect,\r\n      adv: { ...collect.adv, ...c }\r\n    })\r\n  }\r\n  const nextAdvRarity = r => {\r\n    if (r.length === 3) {\r\n      return ['r5'];\r\n    } else if (r[0] === 'r5') {\r\n      return ['r4'];\r\n    } else if (r[0] === 'r4') {\r\n      return ['r3'];\r\n    } else {\r\n      return ['r5', 'r4', 'r3'];\r\n    }\r\n  }\r\n  const advRarityToString = r => {\r\n    if (r.length === 3) {\r\n      return 'All';\r\n    } else {\r\n      return `${r[0][1]}★`;\r\n    }\r\n  }\r\n\r\n  const setDraCollection = c => {\r\n    setCollect({\r\n      ...collect,\r\n      d: { ...collect.d, ...c }\r\n    })\r\n  }\r\n  const nextDraRarity = r => {\r\n    if (r.length === 2) {\r\n      return ['r5'];\r\n    } else if (r[0] === 'r5') {\r\n      return ['misc'];\r\n    } else {\r\n      return ['r5', 'misc'];\r\n    }\r\n  }\r\n  const draRarityToString = r => {\r\n    if (r.length === 2) {\r\n      return 'All';\r\n    } else if (r[0] === 'misc') {\r\n      return `Others`;\r\n    } else {\r\n      return `Gacha 5★`;\r\n    }\r\n  }\r\n\r\n  const direction = 'ltr';\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={idx}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Adventurers\" {...a11yProps(0)} />\r\n          <Tab label=\"Dragons\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <CollectionList\r\n          collection={collect.adv}\r\n          setCollection={setAdvCollection}\r\n          collectionItems={Adventurers}\r\n          maxHaving={1}\r\n          defaultRarity={['r5', 'r4', 'r3']}\r\n          nextRarity={nextAdvRarity}\r\n          rarityToString={advRarityToString}\r\n          IconListComponent={IconCheckList}\r\n          itemType='Adventurers'\r\n          prefix='adv' />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <CollectionList\r\n          collection={collect.d}\r\n          setCollection={setDraCollection}\r\n          collectionItems={Dragons}\r\n          maxHaving={20}\r\n          defaultRarity={['r5']}\r\n          nextRarity={nextDraRarity}\r\n          rarityToString={draRarityToString}\r\n          IconListComponent={IconCounterList}\r\n          itemType='Dragons'\r\n          prefix='d' />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}